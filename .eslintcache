[{"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\index.js":"1","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\App.js":"2","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\reportWebVitals.js":"3","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Boards.js":"4","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Dashboard\\Dashboard.js":"5","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\Navigation.js":"6","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Devlog\\Devlog.js":"7","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Friends.js":"8","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Profile\\Profile.js":"9","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\LandingPage\\LandingPage.js":"10","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\header.js":"11","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\sidebar.js":"12","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\SubList.js":"13","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\chat\\chat.js":"14","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Input\\Input.js":"15","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\InfoBar\\InfoBar.js":"16","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Messages\\Messages.js":"17","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Message\\Message.js":"18","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\API\\friendAPI.js":"19","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\BoardCreator.js":"20","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\API\\boardsAPI.js":"21","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Upload.js":"22","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\cropImage.js":"23","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\viewBoards.js":"24","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Dashboard\\NotFound.js":"25","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\LandingPage\\AuthenticatePlease.js":"26","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Post.js":"27","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\DevTools\\DevTools.js":"28","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\boardList.js":"29","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\BoardList.js":"30","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\Carousel.js":"31","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\Category.js":"32","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\helper.js":"33","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\ProfileContent.js":"34"},{"size":431,"mtime":1611668057121,"results":"35","hashOfConfig":"36"},{"size":2333,"mtime":1617578062158,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":5226,"mtime":1618120512011,"results":"39","hashOfConfig":"36"},{"size":8546,"mtime":1618099336571,"results":"40","hashOfConfig":"36"},{"size":936,"mtime":1618050757950,"results":"41","hashOfConfig":"36"},{"size":2688,"mtime":1618053649610,"results":"42","hashOfConfig":"36"},{"size":13779,"mtime":1618120310487,"results":"43","hashOfConfig":"36"},{"size":7804,"mtime":1617785920242,"results":"44","hashOfConfig":"36"},{"size":7913,"mtime":1618188736407,"results":"45","hashOfConfig":"36"},{"size":2742,"mtime":1618051064688,"results":"46","hashOfConfig":"36"},{"size":3883,"mtime":1618050945356,"results":"47","hashOfConfig":"36"},{"size":2181,"mtime":1618120211459,"results":"48","hashOfConfig":"36"},{"size":3889,"mtime":1618114860968,"results":"49","hashOfConfig":"36"},{"size":747,"mtime":1613490508769,"results":"50","hashOfConfig":"36"},{"size":846,"mtime":1617792661439,"results":"51","hashOfConfig":"36"},{"size":657,"mtime":1618114854843,"results":"52","hashOfConfig":"36"},{"size":2173,"mtime":1618115323795,"results":"53","hashOfConfig":"36"},{"size":1122,"mtime":1617738748996,"results":"54","hashOfConfig":"36"},{"size":30791,"mtime":1618106407223,"results":"55","hashOfConfig":"36"},{"size":1636,"mtime":1618100961452,"results":"56","hashOfConfig":"36"},{"size":2329,"mtime":1613861967074,"results":"57","hashOfConfig":"36"},{"size":2393,"mtime":1615259533104,"results":"58","hashOfConfig":"36"},{"size":39090,"mtime":1618113474073,"results":"59","hashOfConfig":"36"},{"size":568,"mtime":1618113457460,"results":"60","hashOfConfig":"36"},{"size":571,"mtime":1615200959918,"results":"61","hashOfConfig":"36"},{"size":10502,"mtime":1618056269506,"results":"62","hashOfConfig":"36"},{"size":1659,"mtime":1618099247854,"results":"63","hashOfConfig":"36"},{"size":1307,"mtime":1616891502172,"results":"64","hashOfConfig":"36"},{"size":1439,"mtime":1617665090758,"results":"65","hashOfConfig":"36"},{"size":763,"mtime":1618094624842,"results":"66","hashOfConfig":"36"},{"size":342,"mtime":1618090608264,"results":"67","hashOfConfig":"36"},{"size":986,"mtime":1618103439203,"results":"68","hashOfConfig":"36"},{"size":1044,"mtime":1617788396020,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"kxg6ea",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"72"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"72"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\index.js",[],["159","160"],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\App.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\reportWebVitals.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Boards.js",["161"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { profileContext } from \"../App\";\r\nimport { Tabs, Tab } from \"react-materialize\";\r\nimport BoardCreator from \"./BoardCreator\";\r\nimport BoardList from \"../components/BoardList\";\r\nimport CategoryCarousel from \"../components/Carousel\";\r\nimport * as board from \"../API/boardsAPI\";\r\nimport M from \"materialize-css\";\r\nimport \"./Boards.css\";\r\n\r\nconst Boards = () => {\r\n  // sets the items\r\n  const [items, setItems] = useState([]);\r\n  // list of boards that I follow\r\n  const [following, setFollowing] = useState({});\r\n  // refference to Category Carousel\r\n  const categoryCarousel = useRef();\r\n  const { boardList } = useContext(profileContext);\r\n  const itemLoader = (category) => {\r\n    console.log(category);\r\n    board.category(category).then((res) => setItems(res.data));\r\n  };\r\n  useEffect(() => {\r\n    M.Carousel.init(categoryCarousel.current, {\r\n      fullWidth: false,\r\n    });\r\n    board.category(undefined).then((res) => setItems(res.data));\r\n    board.listData(boardList).then((res) => {\r\n      //seperates out the fetched board data into an object that's seperated by categories\r\n      let temp = {};\r\n      for (let item of res.data) {\r\n        if (!(item.category in temp)) temp[item.category] = [];\r\n        temp[item.category].push(item);\r\n      }\r\n      setFollowing(temp);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"canvas-list fade-in\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <Tabs className=\"tab-demo z-index-1\" tabOptions={{ swipeable: true }}>\r\n            <Tab title=\"BROWSE\">\r\n              <div\r\n                className=\"collection white black-text attached \"\r\n                style={{\r\n                  height: \"75vh\",\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <div className=\"title\">\r\n                  <h1>BROWSE</h1>\r\n                </div>\r\n\r\n                <div className=\"center-align\">\r\n                  <CategoryCarousel\r\n                    ref={(el) => {\r\n                      categoryCarousel.current = el;\r\n                    }}\r\n                  />\r\n                  <button\r\n                    className=\"waves-effect waves-orange  btn-flat\"\r\n                    onClick={() => {\r\n                      itemLoader(\r\n                        categoryCarousel.current.querySelector(\r\n                          \".carousel-item.z-depth-4.categoryCard.active\"\r\n                        ).dataset.value\r\n                      );\r\n                    }}\r\n                  >\r\n                    search\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div\r\n                    className=\"offset-s1 col s10 collection\"\r\n                    style={{\r\n                      overflowY: \"auto\",\r\n                      height: \"30vh\",\r\n                      borderBottom: \"none\",\r\n                      borderRight: \"none\",\r\n                      borderLeft: \"none\",\r\n                    }}\r\n                  >\r\n                    <BoardList boards={items} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab title=\"FOLLOWING\">\r\n              <div\r\n                className=\"collection white black-text  \"\r\n                style={{\r\n                  height: \"75vh\",\r\n                  margin: \"0vh\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <div className=\"title\">\r\n                  <h1>FOLLOWING</h1>\r\n                </div>\r\n                <div className=\"center-align\">\r\n                  {Object.keys(following).length > 0 ? (\r\n                    Object.keys(following).map((x) => (\r\n                      <div>\r\n                        <h4 className=\"title\">{x.toUpperCase()}</h4>\r\n                        <section\r\n                          className=\"\"\r\n                          style={{ width: \"60vw\", marginLeft: \"6%\" }}\r\n                        >\r\n                          <BoardList boards={following[x]} />\r\n                        </section>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div\r\n                      className=\"center-align amber-text text-darken-4\"\r\n                      style={{\r\n                        padding: \"2rem\",\r\n                        display: \"relative\",\r\n                        top: \"10vh\",\r\n                      }}\r\n                    >\r\n                      <object\r\n                        data=\"./Mountain_Monochromatic.svg\"\r\n                        style={{ display: \"block\", margin: \"0 auto\" }}\r\n                      >\r\n                        desert image\r\n                      </object>\r\n                      <h6>lone wolf huh?</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            {/* <Tab title=\"JOIN\"></Tab> */}\r\n            <Tab title=\"CREATE\">\r\n              <BoardCreator />\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boards;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Dashboard\\Dashboard.js",["162","163","164","165"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport { profileContext } from \"../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tabs, Tab } from \"react-materialize\";\r\nimport * as board from \"../API/boardsAPI\";\r\nimport * as friend from \"../API/friendAPI\";\r\nimport axios from \"axios\";\r\nimport BoardList from \"../components/BoardList\";\r\nimport { getDate } from \"../helper\";\r\nlet socket;\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [boards, setBoards] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [devlog, setDevlog] = useState([]);\r\n  /**@bug 0004 */\r\n  const [trending, setTrending] = useState([]);\r\n  const { _id, boardList, friendsList } = useContext(profileContext);\r\n  useEffect(() => {\r\n    socket = io(process.env.REACT_APP_SERVER, {\r\n      withCredentials: true,\r\n      extraHeaders: {\r\n        \"my-custom-header\": \"abcd\",\r\n      },\r\n    });\r\n\r\n    socket.emit(\"dashboard\", _id);\r\n\r\n    //fetch list of Boards\r\n    board.listData(boardList).then((res) => {\r\n      setBoards(res.data);\r\n      console.log(res.data);\r\n    });\r\n\r\n    //fetch list of Friends\r\n    friend.listData(friendsList).then((res) => {\r\n      setFriends(res.data);\r\n    });\r\n    // fetch Trending list\r\n    board.trending().then((res) => setTrending(res.data));\r\n\r\n    //fetch list of DevLog\r\n    axios({\r\n      method: \"get\",\r\n      url: process.env.REACT_APP_SERVER + \"/dev/dashboard\",\r\n      withCredentials: true,\r\n    }).then((res) => setDevlog(res.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"dashboardClient\", (obj) => {\r\n      console.log(\"yes\");\r\n      if (posts.length === 3) {\r\n        let temp = posts;\r\n        temp.shift();\r\n        setPosts(temp);\r\n      }\r\n      setPosts([...posts, obj]);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"canvas row fade-in\">\r\n      <div className=\"col s3 push-s9\">\r\n        {/* TRENDING */}\r\n        <div\r\n          className=\"collection white black-text\"\r\n          style={{\r\n            margin: \"0vh\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            height: \"40vh\",\r\n          }}\r\n        >\r\n          <span className=\"title\">TRENDING</span>\r\n          {trending.map((x) => (\r\n            <Link\r\n              className=\"collection-item black-text\"\r\n              key={x.boardURI}\r\n              to={`/app/b/${x.boardURI}`}\r\n            >\r\n              <div style={{ marginLeft: \"5%\", width: \"20%\" }}>\r\n                <span style={{ marginBottom: \"0\" }}>{x.participentLength}</span>\r\n              </div>\r\n              <img src={x.image} style={{ height: \"3rem\" }} />\r\n              <div>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"0.8rem\",\r\n                    marginTop: \"0\",\r\n                    display: \"block\",\r\n                  }}\r\n                >\r\n                  {x.name}\r\n                </span>\r\n                <span style={{ fontSize: \"0.8rem\", marginTop: \"0\" }}>\r\n                  b/{x.boardURI}\r\n                </span>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        {/* patch notes / devlog */}\r\n        <div\r\n          className=\"collection white text-black\"\r\n          style={{\r\n            marginTop: \"3vh\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            height: \"39vh\",\r\n          }}\r\n        >\r\n          <span className=\"title\">DEVLOG</span>\r\n          <div className=\"collection\">\r\n            {devlog.map((x) => (\r\n              <article className=\"collection-item black-text \">\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"1.5rem\",\r\n                      marginTop: \"0\",\r\n                      display: \"block\",\r\n                    }}\r\n                  >\r\n                    <b>{x.title}</b>\r\n                  </span>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"0.7rem\",\r\n                      marginTop: \"0\",\r\n                      marginLeft: \"1rem\",\r\n                    }}\r\n                  >\r\n                    psoted by <b>{x.byLine}</b> at <i>{getDate(x.date)}</i>\r\n                  </span>\r\n\r\n                  <p\r\n                    className=\"container\"\r\n                    style={{ marginLeft: \"10%\", fontSize: \"0.6rem\" }}\r\n                  >\r\n                    {x.post.substring(0, 50)}\r\n                  </p>\r\n                </div>\r\n              </article>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s9 pull-s3\">\r\n        <div className=\"white black-text\">\r\n          <span\r\n            className=\"title\"\r\n            style={{ paddingTop: \"2%\", fontSize: \"2rem\", margin: \"latest\" }}\r\n          >\r\n            POSTS\r\n          </span>\r\n          <div className=\"posts-jumbotron\">\r\n            {posts.length !== 0 ? (\r\n              posts.map((x, i) => (\r\n                <Link\r\n                  to={`/app/b/${x.boardURI}`}\r\n                  id={`items-${i}`}\r\n                  className={`posts-jumbotron-item white-text grey darken-4 ${\r\n                    posts.length >= 3 && i <= 1 ? \"\" : \"fade-in-fwd\"\r\n                  } \r\n                `}\r\n                >\r\n                  {/* header */}\r\n                  <section className=\"posts-jumbotron-item-header \">\r\n                    <img src={x.img} style={{ height: \"3rem\" }} />\r\n                    <div style={{ marginLeft: \"5%\" }}>\r\n                      <span style={{ display: \"block\", marginBottom: \"0\" }}>\r\n                        {x.name}\r\n                      </span>\r\n                      <span style={{ fontSize: \"0.8rem\", marginTop: \"0\" }}>\r\n                        b/{x.boardURI}\r\n                      </span>\r\n                    </div>\r\n                    <span style={{ position: \"absolute\", right: \"0\" }}>\r\n                      {x.date}\r\n                    </span>\r\n                  </section>\r\n                  {/* post */}\r\n                  <p\r\n                    className=\"container\"\r\n                    style={{ fontSize: \"0.8rem\", marginTop: \"4%\" }}\r\n                  >\r\n                    {x.post.length > 200\r\n                      ? `${x.post.substring(0, 200)}...`\r\n                      : x.post}\r\n                  </p>\r\n                </Link>\r\n              ))\r\n            ) : (\r\n              <div className=\"container center-align\">\r\n                <object\r\n                  data={\r\n                    window.location.protocol +\r\n                    \"//\" +\r\n                    window.location.host +\r\n                    \"/app/Empty_Inbox _Two_Color.svg\"\r\n                  }\r\n                  style={{\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                    height: \"70%\",\r\n                    width: \"70%\",\r\n                  }}\r\n                >\r\n                  post box{\" \"}\r\n                </object>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"3%\" }}>\r\n          <Tabs tabOptions={{ swipeable: true }}>\r\n            <Tab title=\"BOARDS\">\r\n              <div\r\n                className=\"collection white\"\r\n                style={{\r\n                  height: \"40vh\",\r\n                  margin: \"0vh\",\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <BoardList boards={boards} />\r\n              </div>\r\n            </Tab>\r\n            <Tab title=\"PEOPLE\">\r\n              <div\r\n                className=\"collection white\"\r\n                style={{\r\n                  height: \"40vh\",\r\n                  margin: \"0vh\",\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                {friends.map((x) => (\r\n                  <Link\r\n                    to={`./app/f/chat/${x._id}`}\r\n                    className=\"collection-item\"\r\n                  >\r\n                    <section>\r\n                      <img src={x.img} alt={`${x.username}`} />\r\n                      <p>{x.username}</p>\r\n                    </section>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n\r\n      {/*Lates patch note */}\r\n\r\n      {/*Boards & Friends */}\r\n\r\n      {/**/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\Navigation.js",["166"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./header.js\";\r\nimport Sidebar from \"./sidebar.js\";\r\n\r\nconst NavBar = () => {\r\n  const [initialActive, setInitialActive] = useState(\"\");\r\n  useEffect(() => {\r\n    let URL = window.location.pathname;\r\n    console.log(`\\n ${window.location.pathname} \\n`);\r\n\r\n    switch (URL.toLowerCase()) {\r\n      default:\r\n        setInitialActive(\"dashboard\");\r\n        break;\r\n      case \"/app/profile\":\r\n        setInitialActive(\"profile\");\r\n        break;\r\n      case \"/app/devlog\":\r\n        setInitialActive(\"devlog\");\r\n        break;\r\n    }\r\n\r\n    if (/app\\/f/.test(URL.toLowerCase()) === true) setInitialActive(\"friends\");\r\n    if (/app\\/b/.test(URL.toLowerCase()) === true) setInitialActive(\"boards\");\r\n  }, [window.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Sidebar initialActive={initialActive} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Devlog\\Devlog.js",["167"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport M from \"materialize-css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { getDate } from \"../helper\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nconst renderers = {\r\n  code: ({ language, value }) => {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={materialDark}\r\n        language={language}\r\n        children={value}\r\n      />\r\n    );\r\n  },\r\n  image: ({ alt, src, title }) => (\r\n    <img alt={alt} src={src} title={title} style={{ maxWidth: 475 }} />\r\n  ),\r\n};\r\n\r\nconst Devlog = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const elems = document.querySelectorAll(\".collapsible\");\r\n    const instances = M.Collapsible.init(elems);\r\n\r\n    //fetch list of DevLog\r\n    axios({\r\n      method: \"get\",\r\n      url: process.env.REACT_APP_SERVER + \"/dev/log\",\r\n      withCredentials: true,\r\n    }).then((res) => setLogs(res.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"canvas\">\r\n      <div\r\n        className=\"collection white fade-in\"\r\n        style={{\r\n          padding: \"0\",\r\n          margin: \"0\",\r\n          borderTop: \"none\",\r\n          borderBottom: \"none\",\r\n          height: \"80vh\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <h1 className=\"title\">DEVLOG</h1>\r\n        <ul class=\"collapsible black-text\">\r\n          {logs.reverse().map((x) => (\r\n            <li>\r\n              <div\r\n                class=\"collapsible-header \"\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexFlow: \"row nowrap\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <span style={{ fontSize: \"2rem\" }}>{x.title}</span>\r\n                <div className=\"right \">\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"1rem\",\r\n                      display: \"inline-flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {getDate(x.date)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"collapsible-body grey darken-3 white-text\">\r\n                <ReactMarkdown renderers={renderers} children={x.post} />\r\n\r\n                <br />\r\n                <span style={{ position: \"absolute\", right: \"5rem\" }}>\r\n                  {x.byLine}\r\n                </span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Devlog;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Friends.js",["168","169"],"import React, { useContext, useEffect, useState, useReducer } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { profileContext } from \"../App\";\r\nimport { Tabs, Tab } from \"react-materialize\";\r\nimport \"./friends.css\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as TiIcons from \"react-icons/ti\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport {\r\n  pendingData,\r\n  sentData,\r\n  listData,\r\n  requestData,\r\n  checkData,\r\n  searchData,\r\n} from \"../API/friendAPI\";\r\n\r\n// Pending Reducer\r\n\r\nconst pendingReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"accept\":\r\n      checkData({ from: action.id, status: \"accepted\" })\r\n        .then(() => console.log(\"yep\"))\r\n        .catch((err) => console.log(err));\r\n      return state.filter((x) => x._id !== action.id);\r\n    case \"reject\":\r\n      checkData({ from: action.id, status: \"rejected\" })\r\n        .then(() => {\r\n          console.log(\"accepted\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n      return state.filter((x) => x._id !== action.id);\r\n    case \"load\":\r\n      return action.payload;\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst Friends = () => {\r\n  // search items\r\n  const [search, setSearch] = useState(\"\");\r\n  //TAB 2 all friend's list\r\n  const [friendsList, setFriendsList] = useState(\"loading\");\r\n  // pending list of friends\r\n  const [pendingList, pendingDispatch] = useReducer(pendingReducer, \"loading\");\r\n  // List of items returned by the search\r\n  const [items, setItems] = useState([]);\r\n  // List of sent requests\r\n  const [sent, setSent] = useState([]);\r\n  // render dummy state serves no purpose but to rerender when tabs are clicked\r\n\r\n  const profileData = useContext(profileContext);\r\n\r\n  // Re-render triggers when ever page is loaded\r\n  useEffect(() => {\r\n    listData(profileData.friendsList).then((res) => setFriendsList(res.data));\r\n\r\n    const pendingFetcher = async () => {\r\n      const tempData = await pendingData();\r\n      // e --> docs IDRequested that awaits your aproval\r\n      const friendsData = await listData(\r\n        Array.from(tempData.data, (e) => e.IDRequested)\r\n      );\r\n      pendingDispatch({ type: \"load\", payload: friendsData.data });\r\n    };\r\n    pendingFetcher();\r\n\r\n    const sentFetcher = async () => {\r\n      const tempData = await sentData();\r\n      // e --> docs IDRecipient that awaits there aproval\r\n      const friendsData = await listData(\r\n        Array.from(tempData.data, (e) => e.IDRecipient)\r\n      );\r\n      setSent(friendsData.data);\r\n    };\r\n    sentFetcher();\r\n  }, []);\r\n\r\n  const findFriend = async (evt) => {\r\n    evt.preventDefault();\r\n    const tempVal = await searchData({\r\n      query: search,\r\n      list: profileData.friendsList,\r\n    });\r\n    setItems(tempVal.data);\r\n  };\r\n\r\n  const handleRequest = (id) => {\r\n    setItems([]);\r\n    requestData(id).then(() => {});\r\n  };\r\n\r\n  return (\r\n    <div className=\"canvas-list fade-in\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <Tabs className=\" z-index-1\">\r\n            <Tab title=\"All\">\r\n              <div\r\n                className=\"collection attached white black-text\"\r\n                style={{\r\n                  height: \"75vh\",\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <div className=\"title\">\r\n                  <span style={{ margin: \"2% 0\", padding: \"0\" }}>ALL</span>\r\n                </div>\r\n                {friendsList === \"loading\" ? (\r\n                  <div className=\"main-loader\" style={{ top: \"10vh\" }} />\r\n                ) : friendsList.length > 0 ? (\r\n                  <div\r\n                    className=\"center-align collection\"\r\n                    style={{\r\n                      overflowY: \"auto\",\r\n                      height: \"55vh\",\r\n                      width: \"100%\",\r\n                      border: \"none\",\r\n                    }}\r\n                  >\r\n                    {friendsList.map((x) => (\r\n                      <Link\r\n                        to={`./f/chat/${x._id}`}\r\n                        className=\"collection-item z-index-0\"\r\n                      >\r\n                        <section>\r\n                          <img src={x.img} alt={`${x.username}`} />\r\n                          <p>{x.username}</p>\r\n                        </section>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"center-align amber-text text-darken-4\"\r\n                    style={{\r\n                      padding: \"2rem\",\r\n                      display: \"relative\",\r\n                      top: \"10vh\",\r\n                    }}\r\n                  >\r\n                    <object\r\n                      data=\"./Sun_Monochromatic.svg\"\r\n                      style={{ display: \"block\", margin: \"0 auto\" }}\r\n                    >\r\n                      desert image\r\n                    </object>\r\n                    <h6>tumbleweed rolls past</h6>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Tab>\r\n            <Tab title=\"sent\">\r\n              <div\r\n                className=\"collection attached white black-text\"\r\n                style={{\r\n                  height: \"75vh\",\r\n                  overflowY: \"hidden\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <div className=\"title\">\r\n                  <span style={{ margin: \"2% 0\", padding: \"0\" }}>SENT</span>\r\n                </div>\r\n                {sent === \"loading\" ? (\r\n                  <div className=\"main-loader\" />\r\n                ) : sent.length > 0 ? (\r\n                  <div\r\n                    className=\"center-align collection\"\r\n                    style={{\r\n                      overflowY: \"auto\",\r\n                      height: \"55vh\",\r\n                      width: \"100%\",\r\n                      border: \"none\",\r\n                    }}\r\n                  >\r\n                    {sent.map((x) => (\r\n                      <a href=\"#!\" className=\"collection-item\">\r\n                        <section>\r\n                          <img src={x.img} alt={`${x.username}`} />\r\n                          <p>{x.username}</p>\r\n                        </section>\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"center-align amber-text text-darken-4\"\r\n                    style={{\r\n                      padding: \"2rem\",\r\n                      display: \"relative\",\r\n                      top: \"10vh\",\r\n                    }}\r\n                  >\r\n                    <object\r\n                      data=\"./Empty Inbox _Monochromatic.svg\"\r\n                      style={{ display: \"block\", margin: \"0 auto\" }}\r\n                    >\r\n                      desert image\r\n                    </object>\r\n                    <h6>oof that's rough buddy</h6>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Tab>\r\n            <Tab title=\"PENDING\">\r\n              <div\r\n                className=\"collection attached white black-text\"\r\n                style={{\r\n                  height: \"75vh\",\r\n                  overflowY: \"hidden\",\r\n                  overflowX: \"hidden\",\r\n                }}\r\n              >\r\n                <div className=\"title\">\r\n                  {/* <IoIcons.IoMdPersonAdd\r\n                    style={{\r\n                      margin: \"2% 0\",\r\n                      marginRight: \"1%\",\r\n                      fontSize: \"5.1rem\",\r\n                    }}\r\n                  /> */}\r\n                  <span style={{ margin: \"2% 0\", padding: \"0\" }}>PENDING</span>\r\n                </div>\r\n                {pendingList === \"loading\" ? (\r\n                  <div className=\"main-loader\" />\r\n                ) : pendingList.length > 0 ? (\r\n                  <div\r\n                    className=\"center-align collection\"\r\n                    style={{\r\n                      overflowY: \"auto\",\r\n                      height: \"55vh\",\r\n                      width: \"100%\",\r\n                      border: \"none\",\r\n                    }}\r\n                  >\r\n                    {pendingList.map((x) => (\r\n                      <div href=\"#!\" className=\"collection-item\">\r\n                        <section>\r\n                          <img src={x.img} alt={`${x.username}`} />\r\n                          <p>{x.username}</p>\r\n                        </section>\r\n                        <div className=\"btn-container\">\r\n                          <div\r\n                            className=\"btn waves-effect waves-light green\"\r\n                            style={{ marginLeft: \"2rem\" }}\r\n                            key={x._id}\r\n                            onClick={() =>\r\n                              pendingDispatch({ type: \"accept\", id: x._id })\r\n                            }\r\n                            style={{ width: \"2.5rem\", height: \"2.5rem\" }}\r\n                          >\r\n                            <TiIcons.TiTick\r\n                              style={{ margin: \"auto\", fontSize: \"1rem\" }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className=\"btn waves-effect waves-light red\"\r\n                            onClick={() =>\r\n                              pendingDispatch({ type: \"reject\", id: x._id })\r\n                            }\r\n                            style={{ width: \"2.5rem\", height: \"2.5rem\" }}\r\n                          >\r\n                            <ImIcons.ImCross\r\n                              style={{ margin: \"auto\", fontSize: \"0.7rem\" }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"center-align amber-text text-darken-4\"\r\n                    style={{\r\n                      padding: \"2rem\",\r\n                      display: \"relative\",\r\n                      top: \"10vh\",\r\n                    }}\r\n                  >\r\n                    <object\r\n                      data=\"./Waiting_Monochromatic.svg\"\r\n                      style={{ display: \"block\", margin: \"0 auto\" }}\r\n                    >\r\n                      desert image\r\n                    </object>\r\n                    <h6>Waiting on some one are we ?</h6>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Tab>\r\n            <Tab title=\"ADD\">\r\n              <div\r\n                className=\"collection white black-text attached\"\r\n                style={{ height: \"75vh\", padding: \"0\" }}\r\n              >\r\n                <div className=\"center-align\">\r\n                  <IoIcons.IoMdPersonAdd\r\n                    style={{\r\n                      display: \"block\",\r\n                      margin: \"0 auto\",\r\n                      marginTop: \"1rem\",\r\n                      fontSize: \"6rem\",\r\n                      color: \"#272727\",\r\n                    }}\r\n                  />\r\n                  <h3\r\n                    style={{\r\n                      margin: \"0\",\r\n                      color: \"#272727\",\r\n                    }}\r\n                  >\r\n                    <b>Add</b>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"center-align \" style={{}}>\r\n                  ID and username in profile section (fourth tab down)\r\n                </div>\r\n                <div\r\n                  className=\"center-align\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    marginBottom: \"3%\",\r\n                    padding: \"0\",\r\n                    marginTop: \"2%\",\r\n                  }}\r\n                >\r\n                  <form onSubmit={findFriend}>\r\n                    <div className=\"friend-search\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter an id example #100893265547281147355 or simply try searching their username\"\r\n                        value={search}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"search-btn btn amber darken-3 \"\r\n                      >\r\n                        <FaIcons.FaSearch /> search\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div\r\n                  className=\"collection\"\r\n                  style={{\r\n                    borderRight: \"none\",\r\n                    borderBottom: \"none\",\r\n                    borderLeft: \"none\",\r\n                    width: \"95%\",\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                >\r\n                  {items.map((x) => (\r\n                    <div\r\n                      href=\"#!\"\r\n                      class=\"collection-item waves-effect waves-light hover-effect\"\r\n                      style={{ margin: \"0 5%\" }}\r\n                      key={x._id}\r\n                      onClick={() => handleRequest(x._id)}\r\n                    >\r\n                      <section>\r\n                        <img src={x.img} alt={`${x.username}`} />\r\n                        <p>{x.username} </p>\r\n                      </section>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Profile\\Profile.js",["170"],"import React, { useContext } from \"react\";\r\nimport { profileContext } from \"../App\";\r\nimport \"./profile.css\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport { docsData } from \"../API/friendAPI\";\r\nimport fileDownload from \"js-file-download\";\r\nimport ProfileContent from \"../components/ProfileContent\";\r\n/**\r\n * Requests Userdata from the back end which get's converted into a json file\r\n *\r\n * @callback Profile~downloadDocsCallback\r\n */\r\nconst downloadDocs = () => {\r\n  docsData().then((res) => {\r\n    fileDownload(res.data, \"logHorizonUserInfo.json\");\r\n  });\r\n};\r\n\r\n/**\r\n *  Profile Section of the Web app. Used to Display Google Cloud API data\r\n *\r\n * @component\r\n * @example\r\n * const userData = useContext(profileContext)\r\n * return(\r\n * <div>\r\n *  <p>userData._id</p>\r\n *  <p>userData.username</p>\r\n *  <p>userData.firstName.length</p>\r\n *  <p>userData.boardList.length</p>\r\n *  <p>userData.lastName</p>\r\n *  <p>userData.createdAt</p>\r\n * </div>\r\n * )\r\n *\r\n */\r\nconst Profile = () => {\r\n  /** contains all the variables that are used to populate the different fields in  */\r\n  const data = useContext(profileContext);\r\n  let { username, firstName, createdAt, img } = data;\r\n\r\n  /**@type {string} converts from Date type to string*/\r\n  createdAt = new Date(createdAt).toDateString();\r\n\r\n  return (\r\n    <div className=\"canvas\" style={{ overflow: \"hidden\" }}>\r\n      <div class=\"row\">\r\n        <div class=\"col s12 center-align fade-in\">\r\n          <h2 style={{ margin: \"0\" }}>\r\n            {`Hello ${firstName || username}`.toUpperCase()}\r\n          </h2>\r\n          <p className=\"light\">WELCOME TO LOGHORIZON</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {/* ------------------------------------------------------------ About ------------------------------------------------------------ */}\r\n        <div className=\"col s5 push-s7  fade-in\">\r\n          <div className=\"card white\" style={{ height: \"41vh\" }}>\r\n            <div className=\"card-content light black-text\">\r\n              <span className=\"card-title left-align \">About</span>\r\n              <span style={{ marginLeft: \"3%\", fontWeight: \"bold\" }}>\r\n                Functionality{\" \"}\r\n              </span>\r\n              <p style={{ marginLeft: \"4%\" }}>\r\n                {\" \"}\r\n                Messages sent through chat is volatile. Meaning it's not stored\r\n                anywhere. Boards contain persistent data which does get stored.\r\n                Google API is used to get user info such as profile picture\r\n              </p>\r\n              <span style={{ marginLeft: \"3%\", fontWeight: \"bold\" }}>\r\n                Techonologies{\" \"}\r\n              </span>\r\n              <p style={{ marginLeft: \"4%\" }}>- MongoDB </p>\r\n              <p style={{ marginLeft: \"4%\" }}>- ExpressJs </p>\r\n              <p style={{ marginLeft: \"4%\" }}>- NodeJs </p>\r\n              <p style={{ marginLeft: \"4%\" }}>- ReactJs </p>\r\n              <p style={{ marginLeft: \"4%\" }}>- Materialize</p>\r\n              <p style={{ marginLeft: \"4%\" }}>- Socket.io</p>\r\n              <div class=\"card-action right-align\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.location.href = \"https://github.com/ThevinSilva\";\r\n                  }}\r\n                  style={{ margin: \"0\" }}\r\n                  className=\"btn grey darken-4 waves-effect waves-light\"\r\n                >\r\n                  <AiIcons.AiFillGithub\r\n                    style={{ fontSize: \"1rem\", color: \"white\" }}\r\n                  />{\" \"}\r\n                  Github{\" \"}\r\n                </button>\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.location.href = \"https://youtu.be/h6DNdop6pD8\";\r\n                  }}\r\n                  style={{ margin: \"0\", marginLeft: \"4%\" }}\r\n                  className=\"btn red darken-1 waves-effect waves-light \"\r\n                >\r\n                  <ImIcons.ImYoutube\r\n                    style={{ fontSize: \"1rem\", color: \"white\", margin: \"0\" }}\r\n                  />{\" \"}\r\n                  Youtube{\" \"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* ------------------------------------------------------------ user data ------------------------------------------------------------ */}\r\n        <div class=\"col s7 pull-s5 \" style={{ paddingBottom: \"none\" }}>\r\n          <div class=\"card white fade-in\" style={{ height: \"41vh\" }}>\r\n            <div class=\"card-content light\">\r\n              <span class=\"card-title left-align black-text\">User Data</span>\r\n              <div className=\"row\">\r\n                <div className=\" col s9 push-s3\">\r\n                  <ProfileContent data={data} />\r\n                </div>\r\n                <div className=\"col s3 pull-s9\">\r\n                  <img\r\n                    className=\"profile-pic\"\r\n                    style={{ marginTop: \"2rem\" }}\r\n                    src={img}\r\n                    alt={`${username}'s profile `}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {/* ------------------------------------------------------------ About ------------------------------------------------------------ */}\r\n        <div class=\"col s6 push-s6 fade-in\">\r\n          <div class=\"card white black-text\">\r\n            <div class=\"card-content light \">\r\n              <span class=\"card-title left-align \">JSON file download </span>\r\n              <p style={{ width: \"80%\", marginLeft: \"5%\" }}>\r\n                Want to know what we're selling sure here you go. One sec, just\r\n                let me redact all the juicy metadata that we have on you so we\r\n                know just what to sell you and control your disposable income\r\n                and entire livelyhood while we're at it{\" \"}\r\n              </p>\r\n            </div>\r\n            <div class=\"card-action right-align\">\r\n              {/* RUN FIND for PROFILE THEN SEND JSON FILE  */}\r\n              <button\r\n                style={{ margin: \"0\" }}\r\n                className=\"btn amber  darken-3 waves-effect waves-light \"\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  downloadDocs();\r\n                }}\r\n              >\r\n                Download\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col s6 pull-s6 fade-in\">\r\n          <div class=\"card white darken-1 black-text\">\r\n            <div class=\"card-content light white\">\r\n              <span class=\"card-title left-align \">\r\n                Data Protection & Privacy\r\n              </span>\r\n              <p style={{ width: \"80%\", marginLeft: \"5%\" }}>\r\n                Ye man it's not like we're totaling selling your data behind\r\n                your backs to advertisers or anything. What's that you were\r\n                looking up vibrators and now all your socials are flooded with\r\n                \"charlie's moby huge\". Hey man not my problem\r\n              </p>\r\n            </div>\r\n            <div class=\"card-action right-align\">\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.location.href = \"https://youtu.be/dWNvlyycWzQ\";\r\n                }}\r\n                style={{ margin: \"0\" }}\r\n                className=\"btn waves-effect waves-light amber darken-3\"\r\n                href=\"#\"\r\n              >\r\n                Learn more\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\LandingPage\\LandingPage.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\header.js",["171"],"import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as GrIcons from \"react-icons/gr\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as CgIcons from \"react-icons/cg\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport { profileContext } from \"../App\";\r\n\r\nconst StatusBar = styled.div` \r\n    background-color: #ff4e00;\r\n    background-image: linear-gradient(315deg, #ff4e00 0%, #ec9f05 74%);\r\n    width: 10%;\r\n    height  15vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    left:90%;\r\n    top: ${({ sidebar }) => (sidebar ? \"10vh\" : \"-100%\")};\r\n    transition: 40ms;\r\n    z-index: 6;\r\n`;\r\n\r\nconst StatusbarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst StatusText = styled.p`\r\n  color: white;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Header = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const profileData = useContext(profileContext);\r\n\r\n  const toggleSidebar = () => setSidebar(!sidebar);\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <Link className=\"status-icon\">\r\n          {!sidebar ? (\r\n            <IoIcons.IoIosArrowDown\r\n              onClick={toggleSidebar}\r\n              style={{ marginRight: \"2rem\" }}\r\n            />\r\n          ) : (\r\n            <IoIcons.IoIosArrowUp\r\n              onClick={toggleSidebar}\r\n              style={{ marginRight: \"2rem\" }}\r\n            />\r\n          )}\r\n          {/* notifications add in future */}\r\n          <img\r\n            src={profileData.img}\r\n            style={{ height: \"7vh\", marginRight: \"1rem\" }}\r\n            alt={` pfp of ${profileData.firstName}`}\r\n          />\r\n          {/* changing profile picture  */}\r\n        </Link>\r\n      </div>\r\n      <StatusBar sidebar={sidebar}>\r\n        <StatusbarWrap>\r\n          <Link className=\"status-icon waves-effect waves-light\" to=\"#\">\r\n            <GrIcons.GrStatusCriticalSmall\r\n              style={{ color: \"green\", fontSize: \"1rem\", marginRight: \"1rem\" }}\r\n            />\r\n            <StatusText>online</StatusText>\r\n          </Link>\r\n          <Link className=\"status-icon waves-effect waves-light\" to=\"#\">\r\n            <GrIcons.GrStatusCriticalSmall\r\n              style={{ color: \"yellow\", fontSize: \"1rem\", marginRight: \"1rem\" }}\r\n            />\r\n            <StatusText>away</StatusText>\r\n          </Link>\r\n          <Link className=\"status-icon waves-effect waves-light\" to=\"#\">\r\n            <MdIcons.MdDoNotDisturbOn\r\n              style={{ color: \"red\", fontSize: \"1rem\", marginRight: \"1rem\" }}\r\n            />\r\n            <StatusText>busy</StatusText>\r\n          </Link>\r\n        </StatusbarWrap>\r\n      </StatusBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\sidebar.js",["172"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubList from \"./SubList\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\nconst Sidebar = ({ initialActive }) => {\r\n  const def = {\r\n    dashboard: false,\r\n    friends: false,\r\n    boards: false,\r\n    profile: false,\r\n    devlog: false,\r\n  };\r\n  /**\r\n   * @type Object Contains the five sections of the app as properties\r\n   *    with a Boolean value for each. The Boolean value dictates which\r\n   *    section tab should be active\r\n   */\r\n  const [active, setActive] = useState(def);\r\n\r\n  useEffect(() => {\r\n    setActive({ ...def, [initialActive]: true });\r\n  }, [initialActive]);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"sidebar\">\r\n        <section class=\"sidebar-nav\">\r\n          <Link to=\"/app\">\r\n            <div\r\n              className={\r\n                active.dashboard\r\n                  ? `sidebar-item  waves-effect waves-light active `\r\n                  : `sidebar-item  waves-effect waves-light `\r\n              }\r\n              onClick={(e) => setActive({ ...def, dashboard: true })}\r\n            >\r\n              <RiIcons.RiDashboardFill />\r\n              <span>Dashboard</span>\r\n            </div>\r\n          </Link>\r\n          {/* FRIEND */}\r\n          <Link to=\"/app/f\">\r\n            <div\r\n              className={\r\n                active.friends\r\n                  ? `sidebar-item  waves-effect waves-light active `\r\n                  : `sidebar-item  waves-effect waves-light `\r\n              }\r\n              onClick={(e) => setActive({ ...def, friends: true })}\r\n            >\r\n              <FaIcons.FaUserFriends />\r\n              <span>Friends</span>\r\n            </div>\r\n          </Link>\r\n          {/* BOARDS */}\r\n          <Link to=\"/app/b\">\r\n            <div\r\n              className={\r\n                active.boards\r\n                  ? `sidebar-item  waves-effect waves-light active `\r\n                  : `sidebar-item  waves-effect waves-light `\r\n              }\r\n              onClick={() => {\r\n                setActive({ ...def, boards: true });\r\n              }}\r\n            >\r\n              <AiIcons.AiFillPushpin />\r\n              <span>Boards</span>\r\n            </div>\r\n          </Link>\r\n          {/* INFO */}\r\n          <Link to=\"/app/Profile\">\r\n            <div\r\n              className={\r\n                active.profile\r\n                  ? `sidebar-item  waves-effect waves-light active `\r\n                  : `sidebar-item  waves-effect waves-light `\r\n              }\r\n              onClick={() => {\r\n                setActive({ ...def, profile: true });\r\n              }}\r\n            >\r\n              <AiIcons.AiFillInfoCircle />\r\n              <span>Profile</span>\r\n            </div>\r\n          </Link>\r\n          {/* SUPPORT */}\r\n          <Link to=\"/app/Devlog\">\r\n            <div\r\n              className={\r\n                active.devlog\r\n                  ? `sidebar-item  waves-effect waves-light active `\r\n                  : `sidebar-item  waves-effect waves-light `\r\n              }\r\n              onClick={() => {\r\n                setActive({ ...def, devlog: true });\r\n              }}\r\n            >\r\n              <AiIcons.AiFillCode />\r\n              <span>Devlog</span>\r\n            </div>\r\n          </Link>\r\n          {/* lOGOUT */}\r\n          <Link to=\"/\">\r\n            <div\r\n              className=\"sidebar-item waves-effect\"\r\n              style={{ marginTop: \"30vh\" }}\r\n            >\r\n              <RiIcons.RiLogoutBoxFill />\r\n            </div>\r\n          </Link>\r\n        </section>\r\n      </nav>\r\n\r\n      {!active.friends || <SubList active={{ friends: true, boards: false }} />}\r\n      {!active.boards || <SubList active={{ friends: false, boards: true }} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Navigation\\SubList.js",["173"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { profileContext } from \"../App\";\r\nimport * as FriendAPI from \"../API/friendAPI\";\r\nimport * as BoardAPI from \"../API/boardsAPI\";\r\n\r\nconst SubList = (props) => {\r\n  const [valList, setValList] = useState(\"loading\");\r\n  const [current, setCurrent] = useState(\"\");\r\n  //  if friends isn't active then boards is active\r\n  const { friends, boards } = props.active;\r\n  const profileData = useContext(profileContext);\r\n  useEffect(() => {\r\n    let path = window.location.pathname.split(\"/\");\r\n    if (friends) {\r\n      FriendAPI.listData(profileData.friendsList).then((res) =>\r\n        setValList(res.data)\r\n      );\r\n      if (path.length === 5) setCurrent(path[4]);\r\n      else setCurrent(\"\");\r\n    }\r\n    if (boards) {\r\n      BoardAPI.listData(profileData.boardList).then((res) =>\r\n        setValList(res.data)\r\n      );\r\n      if (path.length === 4) setCurrent(path[3]);\r\n      else setCurrent(\"\");\r\n    }\r\n  }, [window.location.href]);\r\n\r\n  if (valList.length === 0) {\r\n    return (\r\n      <div className=\"sub-list\">\r\n        <div\r\n          style={{ padding: \"0.5rem\", margin: \"auto 0\", textAlign: \"center\" }}\r\n        >\r\n          {friends\r\n            ? \"looks like you don't have any friends... \"\r\n            : \"looks like you aren't part of any boards...\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (valList === \"loading\") {\r\n    return (\r\n      <div className=\"sub-list\">\r\n        <div class=\"loader\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (valList.length > 0) {\r\n    return (\r\n      <div className=\"sub-list\">\r\n        {valList.map((x) => (\r\n          <Link\r\n            className={\r\n              x._id.toLowerCase() === current.toLowerCase()\r\n                ? \"list-items item-active waves-effect\"\r\n                : \"list-items waves-effect\"\r\n            }\r\n            to={friends ? `/app/f/chat/${x._id}` : `/app/b/${x._id}`}\r\n            key={x._id}\r\n          >\r\n            <img src={x.img} alt={`${x.username}`} />\r\n            <p>{x.username}</p>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubList;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\chat\\chat.js",["174","175"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { profileContext } from \"../../App\";\r\nimport io from \"socket.io-client\";\r\nimport InfoBar from \"../InfoBar/InfoBar\";\r\nimport Input from \"../Input/Input\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport { listData } from \"../../API/friendAPI\";\r\nimport \"./chat.css\";\r\nimport ProfileContent from \"../../components/ProfileContent\";\r\nimport NotFound from \"../../Dashboard/NotFound\";\r\n\r\n//global variable\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n  const { username, _id } = useContext(profileContext);\r\n  const [userData, setUserData] = useState(\"loading\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  const toggleOptions = (e) => {\r\n    e.preventDefault();\r\n    setDrawer(!drawer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(process.env.REACT_APP_SERVER, {\r\n      withCredentials: true,\r\n      extraHeaders: {\r\n        \"my-custom-header\": \"abcd\",\r\n      },\r\n    });\r\n    listData([window.location.href.slice(-21)]).then((res) => {\r\n      if (res.data.length > 0) {\r\n        setUserData(res.data[0]);\r\n        //uses the url to get the id of the other party\r\n        const otherUser = window.location.href.slice(-21);\r\n        /**@bug 0006 */\r\n        const roomNumber = parseInt(otherUser) + parseInt(_id);\r\n        socket.emit(\"joinChat\", { id: _id, name: username, room: roomNumber });\r\n\r\n        // fetch other user's data for sidebar\r\n      } else setUserData(\"notFound\");\r\n      setMessages([]);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"chatDisconnect\", _id);\r\n      socket.off(\"joinChat\");\r\n      setUserData(\"loading\");\r\n    };\r\n  }, [window.location.href]);\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = () => {\r\n      socket.emit(\"chatDisconnect\", _id);\r\n      socket.off(\"joinChat\");\r\n      setUserData(\"loading\");\r\n    };\r\n    return () => {\r\n      window.onbeforeunload = null;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n    return () => {\r\n      socket.off(\"message\");\r\n    };\r\n  }, [messages]);\r\n\r\n  /**\r\n   * message that's being sent to the server to be broadcasted to the room\r\n   * @event@fires socket#sendMessage\r\n   * @param {Object} event\r\n   */\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", { id: _id, message });\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  if (userData === \"notFound\") {\r\n    return <NotFound />;\r\n  }\r\n\r\n  return userData === \"loading\" ? (\r\n    <div className=\"canvas-list\" style={{ padding: \"0\", overflow: \"hidden\" }}>\r\n      <div className=\"main-loader\" />\r\n    </div>\r\n  ) : (\r\n    <div className=\"canvas-list \" style={{ padding: \"0\", overflow: \"hidden\" }}>\r\n      <div className={drawer ? \"chat-container recess\" : \"chat-container\"}>\r\n        <InfoBar\r\n          value={{ room: userData.username, img: userData.img }}\r\n          toggle={toggleOptions}\r\n        />\r\n        <Messages\r\n          messages={messages}\r\n          id={_id}\r\n          name={username}\r\n          img={userData.img}\r\n        />\r\n        <Input\r\n          message={message}\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n        />\r\n      </div>\r\n      <div\r\n        class={\r\n          drawer\r\n            ? \"card drawer grey darken-4\"\r\n            : \"card drawer hidden grey darken-4\"\r\n        }\r\n      >\r\n        <img\r\n          src={userData.img}\r\n          alt={`${userData.username}`}\r\n          style={{ width: \"100%\", height: \"auto\" }}\r\n        />\r\n        <span class=\"card-title\">{userData.username}</span>\r\n        <div style={{ fontSize: \"0.7rem\" }}>\r\n          <ProfileContent data={userData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Input\\Input.js",["176"],"import React from 'react';\r\nimport './Input.css';\r\nimport * as RiIcons from 'react-icons/ri'\r\n\r\n\r\n\r\nconst Input = ({ message , setMessage , sendMessage }) =>(\r\n    <div className =\"message-box\">\r\n        <input\r\n\r\n            type = \"text\"\r\n            value= {message}\r\n            placeholder=\"type a message\"\r\n            value={message}\r\n            onChange={(event)=> setMessage(event.target.value)}\r\n            onKeyPress={event => event.key ==='Enter' ? sendMessage(event) : null}\r\n        />\r\n        <button className = \"sendButton  waves-effect waves-light\" onClick={ (event) => sendMessage(event)}>\r\n            <RiIcons.RiSendPlaneFill style={{'fontSize':'2rem'}}/>\r\n            </button>\r\n    </div>\r\n    \r\n)\r\n\r\nexport default Input","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\InfoBar\\InfoBar.js",["177","178"],"import React, { useContext } from \"react\";\r\nimport \"./InfoBar.css\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { profileContext } from \"../../App\";\r\n// import closeIcon from '../icons/closeIcon.png';\r\n// import onlineIcon from '../icons/onlineIcon.png';\r\n\r\nconst InfoBar = (props) => {\r\n  const { room, img } = props.value;\r\n  return (\r\n    <div className=\"infoBar\">\r\n      <div className=\"leftInnerContainer\">\r\n        <img style={{ height: \"5vh\" }} src={img} alt=\"onlineImage\" />\r\n\r\n        <span>{room.toUpperCase()}</span>\r\n      </div>\r\n      <div className=\"rightInnerContainer\" onClick={props.toggle}>\r\n        {/* add rotation animation make it look clean */}\r\n        <AiIcons.AiFillInfoCircle\r\n          style={{ fontSize: \"2rem\", margin: \"auto 0\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBar;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Messages\\Messages.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Friends\\Message\\Message.js",["179","180","181"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport \"./Message.css\";\r\nimport { getDate } from \"../../helper\";\r\n\r\nconst Message = ({\r\n  message: { user, text, type, id: messageID },\r\n  name,\r\n  id,\r\n  mesgType,\r\n  img,\r\n}) => {\r\n  /** @bug 0001 */\r\n\r\n  if (type === \"time\") {\r\n    if (messageID === id)\r\n      return (\r\n        <div className=\"center\">\r\n          <div className=\"adminBox\">\r\n            {/* DEBUG MODE */}\r\n            {/* <p>{ Date() }</p> */}\r\n            {/* PRODUCTION MODE */}\r\n            <p>{getDate(text)}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    else return <></>;\r\n  } else {\r\n    if (user === \"admin\") {\r\n      return (\r\n        <div className=\"center\">\r\n          <div className=\"adminBox\">\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (messageID === id && type !== \"time\") {\r\n      return (\r\n        <>\r\n          <div className=\"messageContainer justifyEnd\">\r\n            <div className=\"messageBox backgroundOrange\">\r\n              <p className=\"messageText colorwhite\">\r\n                {ReactEmoji.emojify(text)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"messageContainer justifyEnd\">\r\n            {/* IMPLEMENT PROPERDATES */}\r\n            {mesgType === \"Dirrect Message\" ? null : user}\r\n            {/* {type === \"Dirrect Message\" ? Date().split(' ').slice(0,3).join(' '): null} */}\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"messageContainer justifyStart\">\r\n            <img src={img} className=\"iconImage\" />\r\n            <div className=\"messageBox backgroundLight\">\r\n              <p className=\"messageText colorDark\">\r\n                {ReactEmoji.emojify(text)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"messageContainer justifyStart\">\r\n            {mesgType === \"Dirrect Message\" ? null : user}\r\n            {/* {type === \"Dirrect Message\" ? Date().split(' ').slice(0,3).join(' ') : null} */}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Message;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\API\\friendAPI.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\BoardCreator.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\API\\boardsAPI.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Upload.js",["182","183","184","185","186"],"import React, { useState, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Cropper from 'react-easy-crop';\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport { Button, Range } from 'react-materialize';\r\nimport getCroppedImg from './cropImage';\r\n\r\n\r\n\r\nconst  Uploader = ({image,setImage}) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n  const [rotation, setRotation] = useState(0)\r\n  const [zoom, setZoom] = useState(1)\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, [])\r\n\r\n  const showCroppedImage = useCallback(async () => {\r\n    try {\r\n      const croppedImage = await getCroppedImg(\r\n        image,\r\n        croppedAreaPixels,\r\n        rotation\r\n      )\r\n      console.log('donee', { croppedImage })\r\n      setImage(croppedImage)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [croppedAreaPixels, rotation])\r\n\r\n  const onClose = useCallback(() => {\r\n    setImage(null)\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{height:'40vh'}}>\r\n      <div >\r\n        <Cropper\r\n          image={image}\r\n          crop={crop}\r\n          rotation={rotation}\r\n          zoom={zoom}\r\n          aspect={4 / 4}\r\n          onCropChange={setCrop}\r\n          onRotationChange={setRotation}\r\n          onCropComplete={onCropComplete}\r\n          onZoomChange={setZoom}\r\n        />\r\n      </div>\r\n      {/* controlls */}\r\n      <div className='row'>\r\n         <Button\r\n         className=' amber darken-3'\r\n          node=\"button\"\r\n          style={{\r\n            marginTop: '25%'\r\n          }}\r\n          flat\r\n          waves=\"light\"\r\n          onClick={showCroppedImage}\r\n          modal='close'\r\n        >\r\n          <AiIcons.AiFillSave style={{fontSize:'2rem'}}/>\r\n        </Button>\r\n      </div>\r\n      <div className='row'>\r\n        <Button\r\n         className=' amber darken-3'\r\n          node=\"button\"\r\n          style={{\r\n            marginTop: '5%'\r\n          }}\r\n          flat\r\n          waves=\"light\"\r\n          onClick={(e) => {e.preventDefault(); setImage(null)  } }\r\n          modal='close'\r\n        >\r\n          <AiIcons.AiFillDelete style={{fontSize:'2rem'}}/>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Uploader;","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\cropImage.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\viewBoards.js",["187","188","189","190","191","192","193","194","195","196"],"import React, { useState, useEffect, useContext, useReducer } from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { profileContext } from \"../App\";\r\nimport { Tab, Tabs } from \"react-materialize\";\r\nimport \"./Boards.css\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as GoIcons from \"react-icons/go\";\r\nimport * as board from \"../API/boardsAPI\";\r\nimport * as friend from \"../API/friendAPI\";\r\nimport io from \"socket.io-client\";\r\nimport M from \"materialize-css\";\r\nimport Post from \"./Post.js\";\r\nimport * as uuid from \"uuid\";\r\nimport { Menu, Item, Separator, useContextMenu, theme } from \"react-contexify\";\r\nimport { searchData } from \"../API/boardsAPI\";\r\nimport \"react-contexify/dist/ReactContexify.min.css\";\r\nimport ReactMde from \"react-mde\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport { toBase64 } from \"../helper\";\r\nimport NotFound from \"../Dashboard/NotFound\";\r\n\r\nconst renderers = {\r\n  code: ({ language, value }) => {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={materialDark}\r\n        language={language}\r\n        children={value}\r\n      />\r\n    );\r\n  },\r\n  image: ({ alt, src, title }) => (\r\n    <img alt={alt} src={src} title={title} style={{ maxWidth: 475 }} />\r\n  ),\r\n};\r\n\r\n//NOTE bcrypt by design has a different hash for each plain text this information will not help anyone\r\n\r\nexport const boardContext = React.createContext();\r\n\r\n//constant\r\n\r\nconst MENU_ID = \"menu-id\";\r\n\r\nlet socket;\r\n\r\n// use old syntax to hoist\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"addPost\":\r\n      const { id, ...rest } = action.value;\r\n      return { ...state, [id]: rest };\r\n    case \"addReply\":\r\n      return {\r\n        ...state,\r\n        [action.value.id]: {\r\n          ...state[action.value.id],\r\n          comments: [...state[action.value.id].comments, action.value.reply],\r\n        },\r\n      };\r\n\r\n    case \"editPost\":\r\n      return {\r\n        ...state,\r\n        [action.value.id]: {\r\n          ...state[action.value.id],\r\n          post: action.value.post,\r\n          date: action.value.date,\r\n        },\r\n      };\r\n\r\n    case \"delPost\":\r\n      let { username, img, date, level } = state[action.value];\r\n      return {\r\n        ...state,\r\n        [action.value]: { username, post: null, img, date, level },\r\n      };\r\n    case \"upVote\":\r\n      return {\r\n        ...state,\r\n        [action.value.id]: {\r\n          ...state[action.value.id],\r\n          votes: state[action.value.id].votes + 1,\r\n          voteList: state[action.value.id].voteList.includes(\r\n            action.value.usernameID\r\n          )\r\n            ? state[action.value.id].voteList\r\n            : [...state[action.value.id].voteList, action.value.usernameID],\r\n        },\r\n      };\r\n    case \"downVote\":\r\n      return {\r\n        ...state,\r\n        [action.value.id]: {\r\n          ...state[action.value.id],\r\n          votes: state[action.value.id].votes - 1,\r\n          voteList: state[action.value.id].voteList.includes(\r\n            action.value.usernameID\r\n          )\r\n            ? state[action.value.id].voteList\r\n            : [...state[action.value.id].voteList, action.value.usernameID],\r\n        },\r\n      };\r\n    case \"pinned\":\r\n      return {\r\n        ...state,\r\n        [action.value.id]: {\r\n          ...state[action.value.id],\r\n          pin: !state[action.value.id].pin,\r\n        },\r\n      };\r\n    case \"load\":\r\n      return { ...action[\"value\"], ...state };\r\n    case \"unload\":\r\n      return {};\r\n    default:\r\n      return new Error();\r\n  }\r\n}\r\n\r\nconst ViewBoards = () => {\r\n  const { show } = useContextMenu({\r\n    id: MENU_ID,\r\n  });\r\n\r\n  // STYLE STATES\r\n  const [contractRight, setContractRight] = useState(false);\r\n  const [contractBottom, setContractBottom] = useState(false);\r\n  const [boardPicHeight, setBoardPicHeight] = useState(6);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  // BOARD DATA STATES\r\n  const [mainLoading, setMainLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [level, setLevel] = useState(4);\r\n  const [login, setLogin] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [post, setPost] = useState(\"**Hello World!!!**\");\r\n  const [editMode, setEditMode] = useState({});\r\n  const [editName, setEditName] = useState(false);\r\n  const [userList, setUserList] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  //searched users\r\n\r\n  // for now initial state is empty array\r\n  const [posts, dispatch] = useReducer(reducer, {});\r\n  const userObj = useContext(profileContext);\r\n  const { _id, username, img } = userObj;\r\n  const [participents, setParticipents] = useState([]);\r\n  const [moderators, setModerators] = useState([]);\r\n  const [owner, setOwner] = useState({});\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  const [backgroundImage, setBackgroundImage] = useState(null);\r\n  const [blackList, setBlackList] = useState([]);\r\n  const [selectedTab, setSelectedTab] = useState(\"write\");\r\n\r\n  function handleItemClick({ event, props }) {\r\n    let { id } = props;\r\n    switch (event.currentTarget.id) {\r\n      case \"promote\":\r\n        socket.emit(\"promoteServer\", { id, boardURI: login.boardURI });\r\n        break;\r\n      case \"ban\":\r\n        socket.emit(\"banServer\", { id, boardURI: login.boardURI });\r\n        break;\r\n      default:\r\n        window.location.replace(`../f/chat/${id}`);\r\n    }\r\n  }\r\n\r\n  //  function for handling posts\r\n  const postMan = () => {\r\n    const { boardURI } = login;\r\n    const { name } = data;\r\n    // EMITTER [postToServer] - fires posts to server\r\n    if (level <= 2) {\r\n      socket.emit(\"postToServer\", {\r\n        boardURI,\r\n        usernameID: _id,\r\n        username,\r\n        name,\r\n        post,\r\n        level,\r\n        img,\r\n        id: uuid.v4(),\r\n      });\r\n      setPost(\"\");\r\n    }\r\n  };\r\n\r\n  function displayMenu(e) {\r\n    // pass the item id so the `onClick` on the `Item` has access to it\r\n    show(e, {\r\n      props: { type: e.currentTarget.type, id: e.target.id },\r\n    });\r\n  }\r\n\r\n  //  function for handling posts\r\n  const changeBackground = (e) => {\r\n    e.preventDefault();\r\n    let file = URL.createObjectURL(e.target.files[0]);\r\n    toBase64(e.target.files[0]).then((res) => {\r\n      setData({ ...data, background: file });\r\n      socket.emit(\"updateImage\", {\r\n        update: \"backgroundImage\",\r\n        data: res,\r\n        boardURI: login.boardURI,\r\n      });\r\n    });\r\n  };\r\n\r\n  const postsLoader = () => {\r\n    board\r\n      .load({ boardURI: login.boardURI, length: Object.keys(posts).length })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({ type: \"load\", value: res.data });\r\n      });\r\n  };\r\n\r\n  const editPost = (id) => {\r\n    socket.emit(\"edit\", { id, post, boardURI: login.boardURI });\r\n  };\r\n\r\n  const changeBoardName = () => {\r\n    socket.emit(\"boardNameChange\", { boardURI: login.boardURI, boardName });\r\n  };\r\n\r\n  // BOARD DATA FETCHING & AUTHORISATION SEQUENCE\r\n  useEffect(() => {\r\n    //reset everything to defaults\r\n    setMainLoading(true);\r\n    dispatch({ type: \"unload\" });\r\n    setLevel(4);\r\n    setData({});\r\n    setLogin({});\r\n    setBoardName(\"\");\r\n    setParticipents([]);\r\n    setModerators([]);\r\n    setOwner({});\r\n    board\r\n      .loginInfo(window.location.href.split(\"/\").pop())\r\n      .then((loginResponse) => {\r\n        setLogin(loginResponse.data);\r\n        const { boardURI, password } = loginResponse.data;\r\n        if (!password) {\r\n          board\r\n            .authorize({\r\n              password,\r\n              boardURI,\r\n            })\r\n            .then((res) => {\r\n              if (res.data.level > 2) window.location.replace(\"../\");\r\n              setLevel(res.data.level);\r\n              board\r\n                .boardData(window.location.href.split(\"/\").pop())\r\n                .then((res) => {\r\n                  console.log(`\\n whitelist${res.data.whitelist}\\n`);\r\n                  setData(res.data);\r\n                  setBoardName(res.data.name);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n              setErrorMessage(err.response.data);\r\n            });\r\n        }\r\n        setMainLoading(false);\r\n      })\r\n      .catch((err) => setNotFound(true));\r\n  }, [window.location.href]);\r\n\r\n  // Load Posts\r\n  useEffect(() => {\r\n    if (level <= 2 && login.boardURI) postsLoader();\r\n  }, [level, login]);\r\n\r\n  useEffect(() => {\r\n    if (!mainLoading) {\r\n      document.querySelector(\".canvas-list\").addEventListener(\r\n        \"scroll\",\r\n        function (event) {\r\n          let innerContainerHeight = document.querySelector(\".canvas-list\")\r\n            .scrollTop;\r\n          if (\r\n            0 < innerContainerHeight < 295 &&\r\n            innerContainerHeight % 1 === 0\r\n          ) {\r\n            // must change css of board picture\r\n            setBoardPicHeight(6 - (innerContainerHeight / 295) * 2);\r\n          }\r\n        },\r\n        { passive: true }\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // EMITTER [joinBOARD] - fires when authorization process is complete\r\n    socket = io(process.env.REACT_APP_SERVER, {\r\n      withCredentials: true,\r\n      extraHeaders: {\r\n        \"my-custom-header\": \"abcd\",\r\n      },\r\n    });\r\n\r\n    if (level <= 2 && level !== 4) {\r\n      console.log(\"success\");\r\n      socket.emit(\"joinBoard\", { boardURI: login.boardURI, userObj });\r\n    }\r\n\r\n    return () => {\r\n      socket.off(\"joinBoard\");\r\n    };\r\n  }, [data, login, userObj]);\r\n\r\n  // FETCHES USER LIST INFORMATION\r\n  useEffect(() => {\r\n    if (data.owner) {\r\n      // do one call instead of many\r\n      const combined = [\r\n        data.owner,\r\n        ...data.moderators,\r\n        ...data.participents,\r\n        ...data.blacklist,\r\n      ];\r\n\r\n      friend.listData(combined).then((res) => {\r\n        const temp = res.data.map((x) => {\r\n          return { ...x, order: combined.indexOf(x._id) };\r\n        });\r\n        // mongoose doesn't return querry in the same order this is the fix\r\n        const sorted = temp.sort((x, y) => x.order - y.order);\r\n        setOwner(sorted[0]);\r\n        if (data.moderators)\r\n          setModerators(sorted.slice(1, data.moderators.length + 1));\r\n        if (data.participents)\r\n          setParticipents(\r\n            sorted.slice(\r\n              data.moderators.length + 1,\r\n              data.moderators.length + data.participents.length + 1\r\n            )\r\n          );\r\n        if (data.blacklist)\r\n          setBlackList(\r\n            sorted.slice(\r\n              data.moderators.length + data.participents.length + 1,\r\n              data.moderators.length +\r\n                data.participents.length +\r\n                data.blacklist.length +\r\n                1\r\n            )\r\n          );\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  //whitelist user search\r\n  useEffect(() => {\r\n    searchData(search)\r\n      .then((res) => {\r\n        let temp = Object.keys(res.data).filter(\r\n          (x) =>\r\n            !Array.from(\r\n              [...moderators, ...participents, owner],\r\n              (x) => x._id\r\n            ).includes(x)\r\n        );\r\n        setUserList(\r\n          Array.from(temp, (x) => {\r\n            return { _id: x, ...res.data[x] };\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [search]);\r\n\r\n  // //userJoin\r\n  useEffect(() => {\r\n    socket.on(\"userJoined\", (userObj) => {\r\n      console.log(moderators);\r\n      console.log(data.owner);\r\n      if (\r\n        userObj._id !== owner._id &&\r\n        !moderators.findIndex((x) => userObj._id === x._id)\r\n      ) {\r\n        setParticipents((current) => {\r\n          if (!current.findIndex((x) => x._id === userObj._id))\r\n            return [...current, userObj];\r\n          else return current;\r\n        });\r\n      }\r\n    });\r\n    return () => socket.off(\"userJoined\");\r\n  }, [moderators]);\r\n\r\n  // POST\r\n  useEffect(() => {\r\n    socket.on(\"postToClient\", (post) => {\r\n      console.log(\"anythin\");\r\n      console.log(post);\r\n      // make post a reducet to prevent insanely high complexities\r\n      dispatch({ type: \"addPost\", value: post });\r\n    });\r\n\r\n    return () => socket.off(\"postToClient\");\r\n  }, [data]);\r\n  // DELETE POST\r\n  useEffect(() => {\r\n    socket.on(\"deletePostClient\", (id) => {\r\n      console.log(\"delete post\");\r\n      dispatch({ type: \"delPost\", value: id });\r\n    });\r\n    return () => socket.off(\"deletePostClient\");\r\n  }, [data]);\r\n\r\n  // UPVOTE POST\r\n  useEffect(() => {\r\n    socket.on(\"upVoteClient\", ({ id, usernameID }) => {\r\n      console.log(id, usernameID);\r\n      console.log(\"upvote post\");\r\n      dispatch({ type: \"upVote\", value: { id, usernameID } });\r\n    });\r\n    return () => socket.off(\"upVoteClient\");\r\n  }, [data]);\r\n\r\n  // DOWNVOTE POST\r\n  useEffect(() => {\r\n    socket.on(\"downVoteClient\", (id) => {\r\n      console.log(\"downvote post\");\r\n      dispatch({ type: \"downVote\", value: id });\r\n    });\r\n    return () => socket.off(\"downVoteClient\");\r\n  }, [data]);\r\n\r\n  // PIN POST\r\n  useEffect(() => {\r\n    socket.on(\"pinClient\", (id) => {\r\n      dispatch({ type: \"pinned\", value: { id } });\r\n    });\r\n    return () => socket.off(\"pinClient\");\r\n  }, [data]);\r\n\r\n  // COMMENT / REPLY TO POST\r\n  useEffect(() => {\r\n    socket.on(\"replyClient\", ({ id, ...replyObj }) => {\r\n      console.log(\"no hitch\");\r\n      dispatch({ type: \"addReply\", value: { id, reply: replyObj } });\r\n    });\r\n    return () => socket.off(\"replyClient\");\r\n  }, [data]);\r\n\r\n  // EDIT POST\r\n  useEffect(() => {\r\n    socket.on(\"editClient\", ({ id, post, date }) => {\r\n      console.log(\"no hitch 2\");\r\n      dispatch({ type: \"editPost\", value: { id, post, date } });\r\n    });\r\n    return () => socket.off(\"editClient\");\r\n  }, [editMode]);\r\n\r\n  // banning\r\n  useEffect(() => {\r\n    console.log(participents);\r\n    socket.on(\"banClient\", (id, username) => {\r\n      setParticipents((current) => current.filter((x) => x._id !== id));\r\n      setModerators((current) => current.filter((x) => x._id !== id));\r\n      if (id === _id) window.location.replace(\"../\");\r\n    });\r\n    return () => socket.off(\"banClient\");\r\n  }, [data]);\r\n\r\n  //promoting\r\n  useEffect(() => {\r\n    socket.on(\"promoteClient\", (id) => {\r\n      setModerators((current) => [\r\n        ...current,\r\n        participents.find((x) => x._id === id),\r\n      ]);\r\n      setParticipents((current) => current.filter((x) => x._id !== id));\r\n    });\r\n  }, [participents]);\r\n\r\n  if (notFound) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  return mainLoading ? (\r\n    <div className=\"canvas-list\">\r\n      <div className=\"main-loader\"></div>\r\n    </div>\r\n  ) : login.password ? (\r\n    <div className=\"canvas-list\">\r\n      <div className=\"passwordBox \">\r\n        <div className=\"center-align\">\r\n          <img\r\n            src={login.image}\r\n            style={{ marginTop: \"10%\", height: \"6rem\", width: \"6rem\" }}\r\n          />\r\n          <br />\r\n          <span className=\"passwordBoardName\">b/{login.boardURI}</span>\r\n        </div>\r\n        <form\r\n          className=\"row\"\r\n          style={{ padding: \"5%\" }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            board\r\n              .authorize({\r\n                boardURI: window.location.href.split(\"/\").pop(),\r\n                password: document.querySelector(\"#password\").value,\r\n              })\r\n              .then((res) => {\r\n                console.log(res.data.result);\r\n                if (res.data.result) {\r\n                  board\r\n                    .boardData(window.location.href.split(\"/\").pop())\r\n                    .then((res) => {\r\n                      setData(res.data);\r\n                      setBoardName(res.data.name);\r\n                      setLogin({ ...login, password: false });\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n                }\r\n                setLevel(res.data.level);\r\n                console.log(level);\r\n              })\r\n              .catch((err) => {\r\n                let errorCode = err.message.split(\" \").pop();\r\n\r\n                switch (parseInt(errorCode)) {\r\n                  case 403:\r\n                    M.toast({\r\n                      html:\r\n                        '<span style=\"color:#ff8a80;\">ALERT: Invalid Password</span>',\r\n                    });\r\n                    break;\r\n                  case 402:\r\n                    M.toast({\r\n                      html:\r\n                        '<span style=\"color:#ff8a80;\">ALERT: You are not whitelisted</span>',\r\n                    });\r\n                    break;\r\n                  case 401:\r\n                    M.toast({\r\n                      html:\r\n                        '<span style=\"color:#ff8a80;\">ALERT: You are Banned</span>',\r\n                    });\r\n                    break;\r\n                  default:\r\n                    console.log(err.message);\r\n                    break;\r\n                }\r\n              });\r\n          }}\r\n        >\r\n          <div className=\" col s10 offset-s1 input-field\">\r\n            <label for=\"password\">password</label>\r\n            <input id=\"password\" type=\"password\" name=\"password\" />\r\n            <input\r\n              className=\"btn amber darken-3 offset-s4 col s3\"\r\n              type=\"submit\"\r\n              name=\"password\"\r\n              value=\"join\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <boardContext.Provider\r\n      value={{\r\n        socket,\r\n        boardURI: login.boardURI,\r\n        post,\r\n        setEditMode,\r\n        setPost,\r\n        editMode,\r\n      }}\r\n    >\r\n      <div className=\"canvas-list parallaxContainer scale-up-center\">\r\n        <div\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundImage: `url(${data.background})`,\r\n          }}\r\n        >\r\n          {_id !== data.owner || (\r\n            <div id=\"changeBackground\">\r\n              <label for=\"image\">\r\n                <FaIcons.FaPencilAlt\r\n                  style={{\r\n                    position: \"relative\",\r\n                    left: \"1rem\",\r\n                    top: \"0.8rem\",\r\n                    fontSize: \"1rem\",\r\n                    color: \"white\",\r\n                  }}\r\n                />\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                style={{ opacity: \"0\" }}\r\n                onChange={(e) => changeBackground(e)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div className=\"infoBar \">\r\n            <img\r\n              id=\"boardPic\"\r\n              style={{\r\n                height: `${boardPicHeight}rem`,\r\n                width: `${boardPicHeight}rem`,\r\n                marginTop: `-${1.7 * ((boardPicHeight - 4) / 6)}rem`,\r\n                border: ` ${0.5 * ((boardPicHeight - 4) / 6)}rem dashed white`,\r\n                borderRadius: \"50%\",\r\n                zIndex: \"3\",\r\n              }}\r\n              src={login.image}\r\n              alt=\"board\"\r\n            />\r\n            <div className=\"leftInnerContainer\">\r\n              {editName ? (\r\n                <div\r\n                  className=\"input-field row\"\r\n                  style={{ margin: \"0\", width: \"100%\" }}\r\n                >\r\n                  <input\r\n                    className=\"col s7\"\r\n                    type=\"text\"\r\n                    onChange={(e) => setBoardName(e.target.value)}\r\n                    value={boardName}\r\n                  />\r\n                  <button\r\n                    style={{ marginTop: \"2%\" }}\r\n                    className=\"col s2 btn btn-flat green accent-3 text-white waves-effect\"\r\n                    onClick={() => {\r\n                      changeBoardName();\r\n                      setEditName(false);\r\n                    }}\r\n                  >\r\n                    save\r\n                  </button>\r\n                  <button\r\n                    style={{ marginTop: \"2%\" }}\r\n                    className=\"col s2 btn btn-flat red accent-3 text-white waves-effect\"\r\n                    onClick={() => {\r\n                      setEditName(false);\r\n                    }}\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <span>{boardName}</span>\r\n                  {!(level <= 0) || (\r\n                    <FaIcons.FaPencilAlt\r\n                      className={`postIcons`}\r\n                      onClick={() => {\r\n                        setEditName(true);\r\n                      }}\r\n                      style={{ fontSize: \"1.4rem\", marginLeft: \"1%\" }}\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"rightInnerContainer\">\r\n              <AiIcons.AiOutlineMenuFold\r\n                style={{ fontSize: \"2rem\", marginTop: \"1rem\" }}\r\n                onClick={() => setContractRight(!contractRight)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <ScrollToBottom\r\n            mode=\"bottom\"\r\n            initialScrollBehavior=\"smooth\"\r\n            className={`postContainer ${\r\n              contractRight ? \"contract-right\" : \"expand-right\"\r\n            } ${!contractBottom || \"contract-bottom\"} z-depth-0 `}\r\n          >\r\n            {/*-------------------------------------------------------- post --------------------------------------------------------*/}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"center-align\">\r\n                {!(level <= 2 && Object.keys(posts).length > 4) || (\r\n                  <button\r\n                    className=\"btn amber darken-3 waves-effect \"\r\n                    style={{ margin: \"0 auto\", marginTop: \"1% \" }}\r\n                    onClick={() => {\r\n                      postsLoader();\r\n                    }}\r\n                  >\r\n                    load more\r\n                  </button>\r\n                )}\r\n                {level <= 2 || <h2>{errorMessage.toUpperCase()}</h2>}\r\n              </div>\r\n            </div>\r\n            {Object.keys(posts).map((x) => (\r\n              <Post id={x} content={posts[x]} userLevel={level} />\r\n            ))}\r\n          </ScrollToBottom>\r\n          {/* MESSAGE BOX */}\r\n          <div\r\n            className={`messageSection grey darken-4 ${\r\n              contractBottom ? \"scale-up-center \" : \"scale-down-center \"\r\n            }  ${contractRight ? \"contract-right\" : \"expand-right\"} `}\r\n          >\r\n            {!contractBottom ? (\r\n              <div\r\n                className=\"center\"\r\n                onClick={() => {\r\n                  setContractBottom(!contractBottom);\r\n                }}\r\n              >\r\n                <IoIcons.IoMdArrowDropup style={{ fontSize: \"2.3rem\" }} />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div>\r\n                  <div\r\n                    className=\"center\"\r\n                    onClick={() => {\r\n                      setContractBottom(!contractBottom);\r\n                    }}\r\n                  >\r\n                    <IoIcons.IoMdArrowDropdown style={{ fontSize: \"1rem\" }} />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* seperate container around the editor it self to allow for fullscreen support */}\r\n          <div\r\n            style={contractBottom ? {} : { display: \"none\" }}\r\n            className={`reactMdEditor grey darken-4 ${\r\n              contractRight ? \"contract-right\" : \"expand-right\"\r\n            } `}\r\n          >\r\n            <ReactMde\r\n              value={post}\r\n              onChange={setPost}\r\n              selectedTab={selectedTab}\r\n              onTabChange={setSelectedTab}\r\n              generateMarkdownPreview={(markdown) =>\r\n                Promise.resolve(\r\n                  <ReactMarkdown renderers={renderers} children={post} />\r\n                )\r\n              }\r\n              childProps={{\r\n                writeButton: {\r\n                  tabIndex: -1,\r\n                },\r\n              }}\r\n            />\r\n            {editMode.id ? (\r\n              <div\r\n                className=\"row\"\r\n                style={{ margin: \"0\", padding: \"0\", height: \"3vh\" }}\r\n              >\r\n                <div className=\"col s6\" style={{ padding: \"0\" }}>\r\n                  <button\r\n                    className=\"btn waves-effect  waves-light red accent-2 \"\r\n                    style={{\r\n                      margin: \"0\",\r\n                      padding: \"0\",\r\n                      height: \"3vh\",\r\n                      width: \" 100%\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setEditMode({});\r\n                      setPost(\"\");\r\n                    }}\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                </div>\r\n                <div className=\"col s6\" style={{ padding: \"0\" }}>\r\n                  <button\r\n                    className=\"btn waves-effect waves-light  green accent-2 \"\r\n                    style={{\r\n                      margin: \"0\",\r\n                      padding: \"0\",\r\n                      height: \"3vh\",\r\n                      width: \" 100%\",\r\n                    }}\r\n                    onClick={() => {\r\n                      editPost(editMode.id);\r\n                      setEditMode({});\r\n                    }}\r\n                  >\r\n                    save\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button\r\n                className=\" waves-effect center waves-light postButton\"\r\n                onClick={() => {\r\n                  postMan();\r\n                }}\r\n              >\r\n                post\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            contractRight\r\n              ? \"rightBar rightBar-open\"\r\n              : \"rightBar  rightBar-close\"\r\n          }\r\n        >\r\n          <div>\r\n            <Tabs className=\"boardSideBar grey darken-4\">\r\n              <Tab title={<IoIcons.IoMdPeople />}>\r\n                <br />\r\n                <div style={{ overflowY: \"hidden\" }}>\r\n                  {JSON.stringify(owner) === \"{}\" || (\r\n                    <>\r\n                      <span>\r\n                        <FaIcons.FaCrown style={{ fontSize: \"1.1rem\" }} /> OWNER\r\n                      </span>\r\n\r\n                      <ul className=\"collection\" style={{ border: \"none\" }}>\r\n                        <li\r\n                          className=\"collection-item  grey darken-3 \"\r\n                          style={{ fontSize: \"0.9rem\" }}\r\n                        >\r\n                          <section>\r\n                            <img\r\n                              src={owner.img}\r\n                              alt={owner.img}\r\n                              style={{\r\n                                display: \"inline\",\r\n                                height: \"2.5rem\",\r\n                                width: \"auto\",\r\n                              }}\r\n                            />\r\n                            <p style={{ color: \"#FFFFFF\" }}>{owner.username}</p>\r\n                          </section>\r\n                        </li>\r\n                      </ul>\r\n                    </>\r\n                  )}\r\n                  {moderators.length === 0 || (\r\n                    <span>\r\n                      <RiIcons.RiSwordLine style={{ fontSize: \"1.1rem\" }} />\r\n                      MODERATORS\r\n                    </span>\r\n                  )}\r\n\r\n                  <ul className=\"collection\" style={{ border: \"none\" }}>\r\n                    {moderators.map((x) => (\r\n                      <li\r\n                        className=\"collection-item  grey darken-3\"\r\n                        style={{ fontSize: \"0.9rem\" }}\r\n                      >\r\n                        <section>\r\n                          <img\r\n                            src={x.img}\r\n                            alt={x.img}\r\n                            style={{\r\n                              display: \"inline\",\r\n                              height: \"2.5rem\",\r\n                              width: \"auto\",\r\n                            }}\r\n                          />\r\n                          <p style={{ color: \"#FFFFFF\" }}>{x.username}</p>\r\n                        </section>\r\n                        {x._id !== userObj._id || (\r\n                          <GoIcons.GoKebabVertical\r\n                            className=\"postIcons\"\r\n                            style={{\r\n                              order: \"2\",\r\n                              margin: \"auto 0\",\r\n                              fontSize: \"1.5rem\",\r\n                            }}\r\n                            type={\"moderator\"}\r\n                            id={x._id}\r\n                            name={x.username}\r\n                            onClick={displayMenu}\r\n                          />\r\n                        )}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  {participents.length === 0 || (\r\n                    <span>\r\n                      <IoIcons.IoMdPerson style={{ fontSize: \"1.1rem\" }} />\r\n                      PARTICIPENTS\r\n                    </span>\r\n                  )}\r\n                  <ul className=\"collection\" style={{ border: \"none\" }}>\r\n                    {participents.map((x) => (\r\n                      <li\r\n                        className=\"collection-item  grey darken-3\"\r\n                        style={{ fontSize: \"0.9rem\" }}\r\n                      >\r\n                        <section>\r\n                          <img\r\n                            src={x.img}\r\n                            alt={x.img}\r\n                            style={{\r\n                              display: \"inline\",\r\n                              height: \"2.5rem\",\r\n                              width: \"auto\",\r\n                            }}\r\n                          />\r\n                          <p style={{ color: \"#FFFFFF\" }}>{x.username}</p>\r\n                        </section>\r\n                        {x._id === userObj._id || (\r\n                          <GoIcons.GoKebabVertical\r\n                            className=\"postIcons\"\r\n                            style={{\r\n                              order: \"2\",\r\n                              margin: \"auto 0\",\r\n                              fontSize: \"1.5rem\",\r\n                            }}\r\n                            type={\"participents\"}\r\n                            id={x._id}\r\n                            name={x.username}\r\n                            onClick={displayMenu}\r\n                          />\r\n                        )}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <Menu id={MENU_ID} theme={theme.dark} animation={null}>\r\n                    <Item\r\n                      id=\"ban\"\r\n                      disabled={level !== 0}\r\n                      onClick={handleItemClick}\r\n                    >\r\n                      <GiIcons.GiBangingGavel style={{ fontSize: \"1.1rem\" }} />\r\n                      <span style={{ marginLeft: \"5%\" }}>ban</span>\r\n                    </Item>\r\n                    <Separator />\r\n                    <Item\r\n                      id=\"promote\"\r\n                      disabled={({ type, props }) =>\r\n                        level !== 0 || \"moderator\" === props.type\r\n                      }\r\n                      onClick={handleItemClick}\r\n                    >\r\n                      <RiIcons.RiSwordLine style={{ fontSize: \"1.1rem\" }} />\r\n                      <span style={{ marginLeft: \"5%\" }}>promote</span>\r\n                    </Item>\r\n                    <Separator />\r\n                    <Item id=\"message\" onClick={handleItemClick}>\r\n                      <BiIcons.BiMessageRoundedDots\r\n                        style={{ fontSize: \"1.1rem\" }}\r\n                      />\r\n                      <span style={{ marginLeft: \"5%\" }}>message</span>\r\n                    </Item>\r\n                  </Menu>\r\n                </div>\r\n              </Tab>\r\n              <Tab title={<AiIcons.AiFillInfoCircle />}>\r\n                <article>\r\n                  <img style={{ width: \"100%\" }} src={login.image} />\r\n                  <h4>{boardName}</h4>\r\n                  <p>{data.description}</p>\r\n                </article>\r\n              </Tab>\r\n\r\n              <Tab title={<GiIcons.GiScales />} disabled={level !== 0}>\r\n                <article>\r\n                  <h4 className=\"center-align\">Appeal</h4>\r\n                  <p className=\"center-align\">remove users from blacklist</p>\r\n                  <div className=\"collection\" style={{ border: \"none\" }}>\r\n                    {blackList.map((x) => (\r\n                      <div\r\n                        className=\"collection-item black-text\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          padding: \"1%\",\r\n                          marginBottom: \"5%\",\r\n                        }}\r\n                      >\r\n                        <section>\r\n                          <img\r\n                            style={{\r\n                              marginLeft: \"2%\",\r\n                              width: \"30%\",\r\n                              height: \"auto\",\r\n                            }}\r\n                            src={x.img}\r\n                            alt={`${x._id}'s profile `}\r\n                          />\r\n                          <p style={{ fontSize: \"0.6rem\" }}>{x.username}</p>\r\n                        </section>\r\n\r\n                        <ImIcons.ImCross\r\n                          className=\"postIcons\"\r\n                          style={{\r\n                            fontSize: \"0.7rem\",\r\n                            margin: \"auto 0.5rem\",\r\n                            order: \"2\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setBlackList((current) => {\r\n                              return current.filter((y) => y._id !== x._id);\r\n                            });\r\n                            socket.emit(\"addToServer\", {\r\n                              id: x._id,\r\n                              boardURI: login.boardURI,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </article>\r\n              </Tab>\r\n              <Tab\r\n                title={<FaIcons.FaClipboardCheck />}\r\n                disabled={!data.whitelist || level !== 0}\r\n              >\r\n                <article>\r\n                  <h4 className=\"center-align\">Whitelist</h4>\r\n                  <p className=\"center-align\">\r\n                    add users to whitelist or blacklist\r\n                  </p>\r\n                  <div\r\n                    className=\"input-field\"\r\n                    style={{ width: \"80%\", margin: \"0 auto\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"username\"\r\n                      value={search}\r\n                      onChange={(e) => setSearch(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"collection\" style={{ border: \"none\" }}>\r\n                    {userList.map((x) => (\r\n                      <div\r\n                        className=\"collection-item black-text\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          padding: \"1%\",\r\n                          marginBottom: \"5%\",\r\n                        }}\r\n                      >\r\n                        <section>\r\n                          <img\r\n                            style={{\r\n                              marginLeft: \"2%\",\r\n                              width: \"30%\",\r\n                              height: \"auto\",\r\n                            }}\r\n                            src={x.img}\r\n                            alt={`${x._id}'s profile `}\r\n                          />\r\n                          <p style={{ fontSize: \"0.6rem\" }}>{x.username}</p>\r\n                        </section>\r\n                        <div className=\"btn-container\">\r\n                          <div\r\n                            className=\"btn waves-effect waves-light green\"\r\n                            key={x._id}\r\n                            onClick={() => {\r\n                              setUserList((curret) =>\r\n                                curret.filter((y) => y._id !== x._id)\r\n                              );\r\n                              socket.emit(\"addToServer\", {\r\n                                boardURI: login.boardURI,\r\n                                id: x._id,\r\n                              });\r\n                            }}\r\n                            style={{\r\n                              width: \"2.5rem\",\r\n                              height: \"2.5rem\",\r\n                              marginLeft: \"2rem\",\r\n                            }}\r\n                          >\r\n                            <MdIcons.MdAddCircle\r\n                              style={{ margin: \"auto\", fontSize: \"1rem\" }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className=\"btn waves-effect waves-light red\"\r\n                            onClick={() => {\r\n                              setUserList((curret) =>\r\n                                curret.filter((y) => y._id !== x._id)\r\n                              );\r\n                              socket.emit(\"banServer\", {\r\n                                boardURI: login.boardURI,\r\n                                id: x._id,\r\n                              });\r\n                              setBlackList((current) => [\r\n                                ...current,\r\n                                userList.find((y) => y._id === x._id),\r\n                              ]);\r\n                            }}\r\n                            style={{ width: \"2.5rem\", height: \"2.5rem\" }}\r\n                          >\r\n                            <FaIcons.FaBan\r\n                              style={{ margin: \"auto\", fontSize: \"0.7rem\" }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </article>\r\n              </Tab>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </boardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ViewBoards;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Dashboard\\NotFound.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\LandingPage\\AuthenticatePlease.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\Boards\\Post.js",["197","198","199"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport { profileContext } from \"../App\";\r\nimport { boardContext } from \"./viewBoards\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { materialDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nconst renderers = {\r\n  code: ({ language, value }) => {\r\n    return (\r\n      <SyntaxHighlighter\r\n        style={materialDark}\r\n        language={language}\r\n        children={value}\r\n      />\r\n    );\r\n  },\r\n  image: ({ alt, src, title }) => (\r\n    <img alt={alt} src={src} title={title} style={{ maxWidth: 475 }} />\r\n  ),\r\n};\r\n\r\nconst Post = ({ content, id, userLevel }) => {\r\n  const { _id, img: userImage, username } = useContext(profileContext);\r\n  const {\r\n    socket,\r\n    boardURI,\r\n    setEditMode,\r\n    editMode,\r\n    post: postEditor,\r\n    setPost,\r\n  } = useContext(boardContext);\r\n  const [viewMore, setViewMore] = useState(false);\r\n  const [reply, setReply] = useState(false);\r\n  const [replyValue, setReplyValue] = useState(\"\");\r\n  const [edited, setEdited] = useState(content.edited);\r\n  // name is unnecessary\r\n\r\n  // Needs\r\n  // - comments\r\n  // - date\r\n  // - votes\r\n\r\n  const {\r\n    name,\r\n    username: posterName,\r\n    post,\r\n    level,\r\n    img,\r\n    date,\r\n    comments,\r\n    votes,\r\n    usernameID,\r\n    voteList,\r\n    pin,\r\n  } = content;\r\n\r\n  useEffect(() => {\r\n    if (editMode.id === id && edited !== true) {\r\n      console.log(\"alright time to shine\");\r\n      setEdited(true);\r\n    }\r\n  }, [editMode]);\r\n\r\n  const postHandler = {\r\n    deletePost: () => {\r\n      socket.emit(\"deletePost\", { boardURI, id });\r\n    },\r\n    editPost: () => {\r\n      socket.emit(\"editPost\", { boardURI, id });\r\n    },\r\n    pinPost: () => {\r\n      socket.emit(\"pin\", { boardURI, id, pin: !pin });\r\n    },\r\n    upVote: () => {\r\n      socket.emit(\"upVote\", { boardURI, id, usernameID: _id });\r\n    },\r\n    downVote: () => {\r\n      socket.emit(\"downVote\", { boardURI, id, usernameID: _id });\r\n    },\r\n    reply: () => {\r\n      socket.emit(\"reply\", {\r\n        boardURI,\r\n        id,\r\n        reply: replyValue,\r\n        usernameID,\r\n        userImage,\r\n        username,\r\n      });\r\n      setReplyValue(\"\");\r\n      setReply(!reply);\r\n    },\r\n  };\r\n  return post === null ? (\r\n    <div className=\"post row\">\r\n      <div className=\"body col s11 push-s1\">\r\n        <div className=\"postbar\">\r\n          {/* <div className=\"leftInnerContainer\"> */}\r\n          <span>\r\n            {level === 0 ? (\r\n              <FaIcons.FaCrown style={{ fontSize: \"1rem\" }} />\r\n            ) : level === 1 ? (\r\n              <RiIcons.RiSwordLine style={{ fontSize: \"1rem\" }} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            &#160; {posterName} |\r\n            <span style={{ fontSize: \"0.75rem\" }}> {date}</span>\r\n          </span>\r\n           \r\n        </div>\r\n        <article className=\"center\" style={{ height: \"10vh\" }}>\r\n          POST HAS BEEN DELETE\r\n        </article>\r\n\r\n        {/* leftBard */}\r\n      </div>\r\n      <section className=\"col s1 pull-s11\">\r\n        <img\r\n          src={img}\r\n          alt={\"profile picture of \" + posterName}\r\n          style={{\r\n            height: \"4rem\",\r\n            margin: \"0 auto\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        />\r\n      </section>\r\n    </div>\r\n  ) : (\r\n    <div\r\n      className={`post row ${!(editMode.id === id) || \"post-popup z-depth-5\"}`}\r\n      style={pin ? { color: \"#212121\", background: \"white\" } : {}}\r\n    >\r\n      <div className=\"body col s11 push-s1\">\r\n        <div className=\"postbar\">\r\n          {/* <div className=\"leftInnerContainer\"> */}\r\n          <span style={{ margin: \"0\", marginTop: \"1%\" }}>\r\n            {level === 0 ? (\r\n              <FaIcons.FaCrown style={{ fontSize: \"1rem\" }} />\r\n            ) : level === 1 ? (\r\n              <RiIcons.RiSwordLine style={{ fontSize: \"1rem\" }} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            &#160; {posterName} |&#160;\r\n            {!edited || <span style={{ fontSize: \"0.75rem\" }}>edited at </span>}\r\n            <span style={{ fontSize: \"0.75rem\" }}>{date}</span>\r\n          </span>\r\n           \r\n          <div className=\"rightInnerContainer\">\r\n            {!(userLevel === 0 || _id === usernameID) || (\r\n              <AiIcons.AiFillDelete\r\n                className=\"postIcons\"\r\n                style={{ fontSize: \"1.4rem\", marginLeft: \"5%\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  postHandler.deletePost();\r\n                }}\r\n              />\r\n            )}\r\n            {userLevel === 2 || (\r\n              <AiIcons.AiFillPushpin\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  postHandler.pinPost();\r\n                }}\r\n                className={\"postIcons\"}\r\n                style={{ fontSize: \"1.4rem\", marginLeft: \"5%\" }}\r\n              />\r\n            )}\r\n\r\n            {_id !== usernameID || (\r\n              <FaIcons.FaPencilAlt\r\n                className={`postIcons ${\r\n                  !(editMode.id === id) || \"postIcons-active\"\r\n                }`}\r\n                onClick={() => {\r\n                  if (!editMode.id) {\r\n                    setEditMode({ id });\r\n                    setPost(post);\r\n                  }\r\n                }}\r\n                style={{ fontSize: \"1.4rem\", marginLeft: \"5%\" }}\r\n              />\r\n            )}\r\n            <FaIcons.FaReply\r\n              onClick={() => {\r\n                setReply(!reply);\r\n              }}\r\n              className={`postIcons ${!reply || \"postIcons-active\"}`}\r\n              style={{ fontSize: \"1.4rem\", marginLeft: \"5%\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <article style={{ margin: \"1% 0\", marginLeft: \"1%\" }}>\r\n          <ReactMarkdown\r\n            renderers={renderers}\r\n            children={!(editMode.id === id) ? post : postEditor}\r\n          />\r\n        </article>\r\n        {!(content.comments.length > 0) || (\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col s3 postIcons\"\r\n              style={{ transform: \"scale(1)\" }}\r\n              onClick={() => {\r\n                setViewMore(!viewMore);\r\n              }}\r\n            >\r\n              <IoIcons.IoMdArrowDropdown /> view more\r\n            </div>\r\n            {!(viewMore && comments.length > 0) || (\r\n              <div\r\n                className=\"collection\"\r\n                style={{\r\n                  width: \"95%\",\r\n                  margin: \"0 auto\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                {comments.map((x) => (\r\n                  <div className=\" row comment\">\r\n                    <div className=\"col s1 center\">\r\n                      <img\r\n                        src={x.userImage}\r\n                        alt={x.img}\r\n                        style={{\r\n                          height: \"4rem\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col s9 \">\r\n                      <span>posted by {x.username} </span>\r\n                      <p>{x.reply}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        {!reply || (\r\n          <div className=\"row\">\r\n            <div className=\" col s1\" style={{ marginLeft: \"2%\" }}>\r\n              <img\r\n                src={userImage}\r\n                style={{ height: \"4rem\", margin: \"0 auto\" }}\r\n              />\r\n            </div>\r\n            <div className=\"input-field  col s9\">\r\n              <input\r\n                style={{ color: \"white\" }}\r\n                type=\"text\"\r\n                name=\"reply\"\r\n                onChange={(e) => {\r\n                  setReplyValue(e.target.value);\r\n                }}\r\n                value={replyValue}\r\n              />\r\n              <label for=\"reply\">reply</label>\r\n            </div>\r\n            <div className=\"col s1\">\r\n              <button\r\n                className=\"btn waves-effect waves-light amber darken-2 text-white\"\r\n                onClick={() => {\r\n                  postHandler.reply();\r\n                }}\r\n              >\r\n                send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* comments */}\r\n      </div>\r\n      <section className=\"col s1 pull-s11\">\r\n        <img\r\n          src={img}\r\n          alt={\"profile picture of \" + username}\r\n          style={{\r\n            height: \"4rem\",\r\n            margin: \"0 auto\",\r\n            marginTop: \"15%\",\r\n          }}\r\n        />\r\n        {voteList.includes(_id) ? (\r\n          <BiIcons.BiPlusMedical\r\n            className=\"postIcons-inactive\"\r\n            style={{\r\n              fontSize: \"1.4rem\",\r\n              margin: \"0 auto\",\r\n              marginTop: \"15%\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <BiIcons.BiPlusMedical\r\n            className=\"postIcons\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              postHandler.upVote();\r\n            }}\r\n            style={{\r\n              fontSize: \"1.4rem\",\r\n              margin: \"0 auto\",\r\n              marginTop: \"15%\",\r\n            }}\r\n          />\r\n        )}\r\n        <span\r\n          className={`${!voteList.includes(_id) || \"postIcons-inactive\"}`}\r\n          style={{\r\n            fontSize: \"1.4rem\",\r\n            margin: \"0 auto\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {votes}\r\n        </span>\r\n        {voteList.includes(_id) ? (\r\n          <ImIcons.ImMinus\r\n            className=\"postIcons-inactive\"\r\n            style={{\r\n              fontSize: \"1.4rem\",\r\n              margin: \"10% auto\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <ImIcons.ImMinus\r\n            className=\"postIcons\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              postHandler.downVote();\r\n            }}\r\n            style={{\r\n              fontSize: \"1.4rem\",\r\n              margin: \"10% auto\",\r\n            }}\r\n          />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\DevTools\\DevTools.js",["200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport axios from \"axios\";\r\nimport board from \"../API/boardsAPI\";\r\n\r\nconst DevTools = () => {\r\n  const [post, setPost] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [byLine, setByline] = useState(\"\");\r\n\r\n  const tings = new URLSearchParams(window.location.href);\r\n  const search = useLocation().search;\r\n  const name = new URLSearchParams(search).get(\"name\");\r\n\r\n  return (\r\n    !(name === \"kiss-shot-acerola-orion-heart-under-blade\") || (\r\n      <div>\r\n        <label for=\"title\">title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label for=\"by\">by line</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"by\"\r\n          value={byLine}\r\n          onChange={(e) => setByline(e.target.value)}\r\n        />\r\n        <MDEditor value={post} onChange={setPost} style={{ height: \"25vh\" }} />\r\n        <input\r\n          className=\"btn\"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            axios({\r\n              method: \"post\",\r\n              url: process.env.REACT_APP_SERVER + \"/dev/post\",\r\n              data: {\r\n                post,\r\n                title,\r\n                byLine,\r\n              },\r\n              withCredentials: true,\r\n            }).then((res) => {\r\n              console.log(res);\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DevTools;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\boardList.js",["203","204"],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\BoardList.js",["205"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BoardList = ({ boards }) => {\r\n  /**\r\n   * @param {Object} parameterNameHere - fetched board data\r\n   * @return {JSX} list of boards\r\n   */\r\n  /** @bug 0005 */\r\n\r\n  return (\r\n    <>\r\n      {boards.map((x) => (\r\n        <div className=\"collection-item\" key={x._id}>\r\n          <div\r\n            style={{\r\n              order: \"1\",\r\n              display: \"flex\",\r\n              flexFlow: \"nowrap row\",\r\n              width: \"23%\",\r\n            }}\r\n          >\r\n            <img src={x.img} />\r\n            <p>{x.username}</p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              order: \"2\",\r\n              display: \"flex\",\r\n              flexFlow: \"nowrap row\",\r\n              width: \"20%\",\r\n            }}\r\n          >\r\n            <p>{x.participents.length + x.moderators.length + 1} users</p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              order: \"2\",\r\n              display: \"flex\",\r\n              flexFlow: \"nowrap row\",\r\n              width: \"10%\",\r\n            }}\r\n          >\r\n            <p>/b/{x._id} </p>\r\n          </div>\r\n          <Link\r\n            className=\"btn amber darken-3\"\r\n            to={`/app/b/${x._id}`}\r\n            style={{ order: \"8\", width: \"10%\", margin: \"0\" }}\r\n          >\r\n            join\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\Carousel.js",[],"C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\Category.js",["206","207"],"import react from \"react\";\r\n\r\nconst Category = ({ name, img }) => {\r\n  return (\r\n    <div className=\"carousel-item z-depth-4 categoryCard\" data-value={name}>\r\n      <img\r\n        src={img}\r\n        style={{ height: \"80%\", width: \"auto\", marginTop: \"1.5rem\" }}\r\n      />\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\helper.js",["208"],"export const getDate = (val) => {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const dateObj = new Date(val);\r\n  const month = monthNames[dateObj.getMonth()];\r\n  const day = String(dateObj.getDate()).padStart(2, \"0\");\r\n  const year = dateObj.getFullYear();\r\n  let hours = dateObj.getHours();\r\n  let minutes = dateObj.getMinutes();\r\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n  hours %= 12;\r\n  hours = hours ? hours : 12; //the hour '0 ' should be 12\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  return day + \" \" + month + \" \" + hours + \":\" + minutes + \" \" + ampm;\r\n};\r\n\r\n// helper functions\r\nexport const toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n","C:\\Users\\gummy\\Desktop\\work_space\\LogHorizon\\client\\src\\components\\ProfileContent.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":37,"column":6,"nodeType":"215","endLine":37,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":14,"nodeType":"219","messageId":"220","endLine":3,"endColumn":20},{"ruleId":"213","severity":1,"message":"221","line":51,"column":6,"nodeType":"215","endLine":51,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":88,"column":15,"nodeType":"225","endLine":88,"endColumn":63},{"ruleId":"223","severity":1,"message":"224","line":173,"column":21,"nodeType":"225","endLine":173,"endColumn":67},{"ruleId":"213","severity":1,"message":"226","line":25,"column":6,"nodeType":"215","endLine":25,"endColumn":32,"suggestions":"227"},{"ruleId":"217","severity":1,"message":"228","line":29,"column":11,"nodeType":"219","messageId":"220","endLine":29,"endColumn":20},{"ruleId":"213","severity":1,"message":"229","line":80,"column":6,"nodeType":"215","endLine":80,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":255,"column":29,"nodeType":"233","endLine":255,"endColumn":74},{"ruleId":"217","severity":1,"message":"234","line":44,"column":24,"nodeType":"219","messageId":"220","endLine":44,"endColumn":33},{"ruleId":"217","severity":1,"message":"235","line":6,"column":13,"nodeType":"219","messageId":"220","endLine":6,"endColumn":20},{"ruleId":"213","severity":1,"message":"236","line":25,"column":6,"nodeType":"215","endLine":25,"endColumn":21,"suggestions":"237"},{"ruleId":"213","severity":1,"message":"238","line":29,"column":6,"nodeType":"215","endLine":29,"endColumn":28,"suggestions":"239"},{"ruleId":"213","severity":1,"message":"240","line":53,"column":6,"nodeType":"215","endLine":53,"endColumn":28,"suggestions":"241"},{"ruleId":"213","severity":1,"message":"242","line":64,"column":6,"nodeType":"215","endLine":64,"endColumn":8,"suggestions":"243"},{"ruleId":"231","severity":1,"message":"232","line":14,"column":13,"nodeType":"233","endLine":14,"endColumn":28},{"ruleId":"217","severity":1,"message":"244","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":27},{"ruleId":"217","severity":1,"message":"245","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":24},{"ruleId":"217","severity":1,"message":"246","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"247","line":1,"column":27,"nodeType":"219","messageId":"220","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":60,"column":13,"nodeType":"225","endLine":60,"endColumn":52},{"ruleId":"217","severity":1,"message":"248","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":16},{"ruleId":"217","severity":1,"message":"249","line":5,"column":18,"nodeType":"219","messageId":"220","endLine":5,"endColumn":23},{"ruleId":"213","severity":1,"message":"250","line":32,"column":6,"nodeType":"215","endLine":32,"endColumn":35,"suggestions":"251"},{"ruleId":"217","severity":1,"message":"252","line":34,"column":9,"nodeType":"219","messageId":"220","endLine":34,"endColumn":16},{"ruleId":"213","severity":1,"message":"253","line":36,"column":6,"nodeType":"215","endLine":36,"endColumn":8,"suggestions":"254"},{"ruleId":"217","severity":1,"message":"255","line":163,"column":10,"nodeType":"219","messageId":"220","endLine":163,"endColumn":25},{"ruleId":"217","severity":1,"message":"256","line":163,"column":27,"nodeType":"219","messageId":"220","endLine":163,"endColumn":45},{"ruleId":"213","severity":1,"message":"257","line":280,"column":6,"nodeType":"215","endLine":280,"endColumn":28,"suggestions":"258"},{"ruleId":"213","severity":1,"message":"259","line":285,"column":6,"nodeType":"215","endLine":285,"endColumn":20,"suggestions":"260"},{"ruleId":"213","severity":1,"message":"261","line":324,"column":6,"nodeType":"215","endLine":324,"endColumn":28,"suggestions":"262"},{"ruleId":"213","severity":1,"message":"263","line":385,"column":6,"nodeType":"215","endLine":385,"endColumn":14,"suggestions":"264"},{"ruleId":"213","severity":1,"message":"265","line":404,"column":6,"nodeType":"215","endLine":404,"endColumn":18,"suggestions":"266"},{"ruleId":"213","severity":1,"message":"267","line":480,"column":6,"nodeType":"215","endLine":480,"endColumn":12,"suggestions":"268"},{"ruleId":"223","severity":1,"message":"224","line":505,"column":11,"nodeType":"225","endLine":508,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":976,"column":19,"nodeType":"225","endLine":976,"endColumn":70},{"ruleId":"217","severity":1,"message":"269","line":51,"column":5,"nodeType":"219","messageId":"220","endLine":51,"endColumn":9},{"ruleId":"213","severity":1,"message":"270","line":69,"column":6,"nodeType":"215","endLine":69,"endColumn":16,"suggestions":"271"},{"ruleId":"223","severity":1,"message":"224","line":252,"column":15,"nodeType":"225","endLine":255,"endColumn":17},{"ruleId":"217","severity":1,"message":"247","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"272","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":13},{"ruleId":"217","severity":1,"message":"273","line":12,"column":9,"nodeType":"219","messageId":"220","endLine":12,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":16,"column":13,"nodeType":"225","endLine":16,"endColumn":32},{"ruleId":"274","severity":2,"message":"275","line":39,"column":12,"nodeType":"276","endLine":39,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":23,"column":13,"nodeType":"225","endLine":23,"endColumn":32},{"ruleId":"217","severity":1,"message":"277","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":6,"column":7,"nodeType":"225","endLine":9,"endColumn":9},{"ruleId":"217","severity":1,"message":"278","line":19,"column":9,"nodeType":"219","messageId":"220","endLine":19,"endColumn":13},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'boardList'. Either include it or remove the dependency array.","ArrayExpression",["281"],"no-unused-vars","'Socket' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: '_id', 'boardList', and 'friendsList'. Either include them or remove the dependency array.",["282"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["283"],"'instances' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profileData.friendsList'. Either include it or remove the dependency array.",["284"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'createdAt' is assigned a value but never used.","'CgIcons' is defined but never used.","React Hook useEffect has a missing dependency: 'def'. Either include it or remove the dependency array.",["285"],"React Hook useEffect has missing dependencies: 'boards', 'friends', 'profileData.boardList', and 'profileData.friendsList'. Either include them or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["286"],"React Hook useEffect has missing dependencies: '_id' and 'username'. Either include them or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["287"],"React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["288"],"'useContext' is defined but never used.","'profileContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'Range' is defined but never used.","React Hook useCallback has missing dependencies: 'image' and 'setImage'. Either include them or remove the dependency array. If 'setImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"'onClose' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setImage'. Either include it or remove the dependency array. If 'setImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["290"],"'backgroundImage' is assigned a value but never used.","'setBackgroundImage' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["291"],"React Hook useEffect has a missing dependency: 'postsLoader'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'level'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'moderators', 'owner', and 'participents'. Either include them or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'data.owner' and 'owner._id'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: '_id' and 'participents'. Either include them or remove the dependency array.",["296"],"'name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'edited' and 'id'. Either include them or remove the dependency array.",["297"],"'board' is defined but never used.","'tings' is assigned a value but never used.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","'react' is defined but never used.","'year' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"302","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [boardList]",{"range":"331","text":"332"},"Update the dependencies array to be: [_id, boardList, friendsList]",{"range":"333","text":"334"},"Update the dependencies array to be: []",{"range":"335","text":"336"},"Update the dependencies array to be: [profileData.friendsList]",{"range":"337","text":"338"},"Update the dependencies array to be: [def, initialActive]",{"range":"339","text":"340"},"Update the dependencies array to be: [boards, friends, profileData.boardList, profileData.friendsList]",{"range":"341","text":"342"},"Update the dependencies array to be: [_id, username]",{"range":"343","text":"344"},"Update the dependencies array to be: [_id]",{"range":"345","text":"346"},"Update the dependencies array to be: [croppedAreaPixels, image, rotation, setImage]",{"range":"347","text":"348"},"Update the dependencies array to be: [setImage]",{"range":"349","text":"350"},{"range":"351","text":"336"},"Update the dependencies array to be: [level, login, postsLoader]",{"range":"352","text":"353"},"Update the dependencies array to be: [data, level, login, userObj]",{"range":"354","text":"355"},"Update the dependencies array to be: [moderators, owner, participents, search]",{"range":"356","text":"357"},"Update the dependencies array to be: [data.owner, moderators, owner._id]",{"range":"358","text":"359"},"Update the dependencies array to be: [_id, data, participents]",{"range":"360","text":"361"},"Update the dependencies array to be: [editMode, edited, id]",{"range":"362","text":"363"},[1380,1382],"[boardList]",[1611,1613],"[_id, boardList, friendsList]",[772,798],"[]",[2606,2608],"[profileData.friendsList]",[754,769],"[def, initialActive]",[1023,1045],"[boards, friends, profileData.boardList, profileData.friendsList]",[1728,1750],"[_id, username]",[1997,1999],"[_id]",[973,1002],"[croppedAreaPixels, image, rotation, setImage]",[1071,1073],"[setImage]",[8711,8733],[8836,8850],"[level, login, postsLoader]",[9905,9927],"[data, level, login, userObj]",[11726,11734],"[moderators, owner, participents, search]",[12268,12280],"[data.owner, moderators, owner._id]",[14517,14523],"[_id, data, participents]",[1833,1843],"[editMode, edited, id]"]